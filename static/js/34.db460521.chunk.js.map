{"version":3,"sources":["utils/index.ts","styles/layout.ts","components/subs/ContentTrans.tsx","types.d.ts","components/subs/InfiniteScroll.tsx","../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","../node_modules/@material-ui/core/esm/Card/Card.js","../node_modules/@material-ui/core/esm/CardContent/CardContent.js","../node_modules/@material-ui/core/esm/InputLabel/InputLabel.js","components/mission/character/GridView.tsx","components/mission/character/CharacterMissionList.tsx"],"names":["webpMachine","WebpMachine","useRefState","initialValue","useState","state","setState","stateRef","useRef","useEffect","current","masterDataCache","useCachedData","name","cached","cachedRef","setCached","fetchCached","useCallback","a","Axios","get","window","isChinaMainland","process","data","length","then","musicTagToName","all","vocaloid","assetI18n","t","light_music_club","idol","school_refusal","theme_park","street","other","useCharaName","contentTransMode","charas","useAssetI18n","assetT","charaId","chara","find","id","firstName","givenName","includes","language","useMuisicMeta","queue","PQueue","concurrency","getRemoteAssetURL","endpoint","setFunc","isWebpSupported","Modernizr","webplossless","url","endsWith","localforage","getItem","dataUrl","responseType","res","add","decode","Uint8Array","setItem","useProcessedScenarioData","mobCharas","chara2Ds","getCharaName","scenarioPath","isCardStory","ret","characters","actions","ScenarioId","AppearCharacters","Snippets","TalkData","SpecialEffectData","SoundData","FirstBgm","FirstBackground","SnippetAction","SpecialEffect","SnippetProgressBehavior","WaitUnitilFinished","type","isWait","delay","seType","body","resource","push","Sound","SoundPlayMode","playMode","hasBgm","hasSe","bgm","se","map","ap","chara2d","ch","Character2dId","characterType","characterId","mc","snippet","action","Action","Talk","talkData","ReferenceIndex","TalkCharacters","WindowDisplayName","voiceUrl","Voices","VoiceId","startsWith","assetName","unit","ProgressBehavior","Delay","Body","voice","specialEffect","specialEffectType","SpecialEffectType","EffectType","StringVal","StringValSub","split","soundData","PlayMode","Bgm","Se","getJPTime","Date","toLocaleDateString","timeZone","slice","join","useQuery","URLSearchParams","useLocation","search","getColorArray","num","result","i","letters","color","j","Math","floor","random","useLayoutStyles","makeStyles","theme","header","fontWeight","content","marginTop","spacing","marginBottom","marginLeft","marginRight","alert","margin","bold","typography","fontWeightBold","avatarProfile","breakpoints","down","height","width","up","capitalize","textTransform","ContentTrans","mode","contentKey","original","originalProps","translatedProps","assetTOptions","container","direction","CharaNameTrans","setChara","c","ReleaseCondTrans","releaseCondId","releaseConds","releaseCond","setReleaseCond","rc","i18nKey","releaseConditionType","Object","assign","level","releaseConditionTypeLevel","releaseConditionTypeId","rank","point","releaseConditionTypeQuantity","sentence","CharacterMissionType","defaultGridSize","xs","md","InfiniteScroll","ViewComponent","callback","_gridSize","gridSize","viewProps","onComponentClick","forEach","v","transformToCompleteGridSizeOptions","breakpoint","useTheme","useMediaQuery","Boolean","useBreakpoint","hasMore","setHasMore","observer","IntersectionObserver","entries","threshold","listElementRef","currentObserver","currentElement","observe","unobserve","itemsPerRow","numPlaceholders","key","item","sm","lg","xl","onClick","index","ref","style","display","paddingTop","Array","from","_","Skeleton","React","props","_props$animation","animation","classes","className","_props$component","component","Component","_props$variant","variant","_objectWithoutProperties","hasChildren","children","_extends","clsx","root","withChildren","fitContent","heightAuto","withStyles","backgroundColor","fade","palette","text","primary","transformOrigin","transform","borderRadius","shape","rect","circle","pulse","opacity","wave","position","overflow","background","concat","hover","bottom","left","right","top","visibility","maxWidth","Card","_props$raised","raised","Paper","elevation","CardContent","padding","paddingBottom","InputLabel","_props$disableAnimati","disableAnimation","shrinkProp","shrink","muiFormControl","useFormControl","filled","focused","adornedStart","fcs","formControlState","states","FormLabel","formControl","animated","marginDense","outlined","disabled","error","required","asterisk","transition","transitions","create","duration","shorter","easing","easeOut","zIndex","pointerEvents","useStyles","media","backgroundSize","card","cursor","ListCard","grid","useContext","SettingContext","Grid","alignItems","Typography","CharacterMissionList","layoutClasses","useTranslation","characterMissionsCache","characterProfiles","characterMissions","setNormalMissions","setCharaId","missionType","setMissionType","localStorage","viewGridType","page","pageRef","setPage","limit","limitRef","lastQueryFinRef","setLastQueryFin","isReadyRef","setIsReady","sortedCache","sortedCacheRef","setSortedCache","document","title","filter","characterMissionType","events","getPaginatedHonorMissions","Container","FormControl","Select","labelId","value","onChange","e","target","cp","MenuItem","values","cmt","isIntersecting","agenda","comfy"],"mappings":"0lBAmDMA,EAAc,IAAIC,IAEjB,SAASC,EACdC,GAC0E,IAAD,EAC/CC,mBAASD,GADsC,mBAClEE,EADkE,KAC3DC,EAD2D,KAEnEC,EAAWC,iBAAOH,GAIxB,OAHAI,qBAAU,WACRF,EAASG,QAAUL,IAClB,CAACA,IACG,CAACA,EAAOE,EAAUD,GAG3B,IAAIK,EAA4C,GAEzC,SAASC,EAoCdC,GAAmD,IAAD,EACXX,EAAiB,IADN,mBAC3CY,EAD2C,KACnCC,EADmC,KACxBC,EADwB,KAG5CC,EAAcC,sBAAW,sBAAC,8BAAAC,EAAA,sEACQC,IAAMC,IAAN,UAElCC,OAAOC,gBACHC,yDACA,qDAJ8B,YAKhCX,EALgC,UADR,uBACtBY,EADsB,EACtBA,KADsB,kBAQvBA,GARuB,2CAS7B,CAACZ,IAYJ,OAVAJ,qBAAU,WACJE,EAAgBE,IAASF,EAAgBE,GAAMa,OACjDV,EAAUL,EAAgBE,IAE1BI,IAAcU,MAAK,SAACF,GAClBT,EAAUS,GACVd,EAAgBE,GAAQY,OAE3B,CAACR,EAAaJ,EAAMG,IAEhB,CAACF,EAAQC,GAGX,IAQMa,EAA4C,CACvDC,IAAK,MACLC,SAAUC,IAAUC,EAAV,4BACVC,iBAAkBF,IAAUC,EAAV,iCAClBE,KAAMH,IAAUC,EAAV,0BACNG,eAAgBJ,IAAUC,EAAV,oCAChBI,WAAYL,IAAUC,EAAV,gCACZK,OAAQN,IAAUC,EAAV,4BACRM,MAAO,SAGF,SAASC,EAAaC,GAAyC,IAAD,EAClD5B,EAA0B,kBAApC6B,EAD4D,sBAErCC,cAAtBC,EAF2D,EAE3DA,OAAQZ,EAFmD,EAEnDA,UAChB,OAAOb,uBACL,SAAC0B,GACC,IAAMC,EAAQJ,EAAOK,MAAK,SAACD,GAAD,OAAWA,EAAME,KAAOH,KAClD,UAAIC,QAAJ,IAAIA,OAAJ,EAAIA,EAAOG,UACT,OAAQR,GACN,IAAK,WACH,MAAM,GAAN,OAAUK,EAAMG,UAAhB,YAA6BH,EAAMI,WACrC,IAAK,aACH,MAAO,CAAC,QAAS,QAAS,KAAM,MAAMC,SAASnB,EAAUoB,UAAlD,UACAR,EAAO,kBAAD,OACWC,EADX,cAEPC,EAAMG,WAHL,YAIEL,EAAO,kBAAD,OACSC,EADT,cAETC,EAAMI,YANL,UAQAN,EAAO,kBAAD,OACWC,EADX,cAEPC,EAAMI,WAVL,YAWEN,EAAO,kBAAD,OACSC,EADT,cAETC,EAAMG,YAEd,IAAK,OACH,MACE,UAAGH,EAAMG,UAAT,YAAsBH,EAAMI,UAA5B,QACC,CAAC,QAAS,QAAS,KAAM,MAAMC,SAASnB,EAAUoB,UAAlD,UACMR,EAAO,kBAAD,OACWC,EADX,cAEPC,EAAMG,WAHX,YAIQL,EAAO,kBAAD,OACSC,EADT,cAETC,EAAMI,YANX,UAQMN,EAAO,kBAAD,OACWC,EADX,cAEPC,EAAMI,WAVX,YAWQN,EAAO,kBAAD,OACSC,EADT,cAETC,EAAMG,aAKpB,cAAOH,QAAP,IAAOA,OAAP,EAAOA,EAAOI,YAEhB,CAAClB,EAAUoB,SAAUR,EAAQF,EAAQD,IAIlC,SAASY,IAGb,IAAD,EACuClD,EAA0B,IADjE,mBACOY,EADP,KACeC,EADf,KAC0BC,EAD1B,KAGMC,EAAcC,sBAAW,sBAAC,8BAAAC,EAAA,sEACiBC,IAAMC,IAC1B,eAFG,uBACtBI,EADsB,EACtBA,KADsB,kBAKvBA,GALuB,2CAM7B,IAaH,OAXAhB,qBAAU,WAEJE,EAAe,OAAUA,EAAe,MAAOe,OACjDV,EAAUL,EAAe,OAEzBM,IAAcU,MAAK,SAACF,GAClBT,EAAUS,GACVd,EAAe,MAASc,OAE3B,CAACR,EAAaD,IAEV,CAACF,EAAQC,GAGlB,IAAMsC,EAAQ,IAAIC,IAAO,CAAEC,YAAa,IAEjC,SAAeC,EAAtB,oC,4CAAO,WACLC,EACAC,GAFK,qBAAAvC,EAAA,yDAICwC,EAAkBC,UAAUC,aAC5BC,EALD,UAKUtC,+BALV,8BAKkEiC,IAEnEA,EAASM,SAAS,UAAaJ,EAP9B,iCAQiBK,IAAYC,QAAgBH,GAR7C,UAQCI,EARD,wCAUiB9C,IAAMC,IAAIyC,EAAK,CAAEK,aAAc,gBAVhD,cAUKC,EAVL,iBAWef,EAAMgB,KAAY,kBAChCrE,EAAYsE,OAAO,IAAIC,WAAWH,EAAI3C,UAZvC,eAWDyC,EAXC,iBAcKF,IAAYQ,QAAQV,EAAKI,GAd9B,uBAkBGR,GAASA,EAAQQ,GAlBpB,kBAmBMA,GAnBN,uCAsBCR,GAASA,EAAQI,GAtBlB,kBAuBIA,GAvBJ,6C,sBA2BA,SAASW,EACdjC,GACC,IAAD,EACoB5B,EAA6B,iBAA1C8D,EADP,sBAEmB9D,EAA4B,gBAAxC+D,EAFP,oBAIMC,EAAerC,EAAaC,GAElC,OAAOtB,sBAAW,uCAChB,WAAO2D,EAAsBC,GAA7B,iDAAA3D,EAAA,yDACQ4D,EAGF,CACFC,WAAY,GACZC,QAAS,IAGNN,EAASjD,QAAWgD,EAAUhD,QAAWmD,EAThD,yCASqEE,GATrE,mBAWkD3D,IAXlD,SAYUoC,EAAkBqB,GAZ5B,+BAaI,CACEV,aAAc,QAdpB,eAWwD9C,IAXxD,yCAWUI,EAXV,EAWUA,KAONyD,EASEzD,EATFyD,WACAC,EAQE1D,EARF0D,iBACAC,EAOE3D,EAPF2D,SACAC,EAME5D,EANF4D,SAEAC,EAIE7D,EAJF6D,kBACAC,EAGE9D,EAHF8D,UACAC,EAEE/D,EAFF+D,WACAC,EACEhE,EADFgE,iBA1BJ,6BA8BIV,EAAIE,QA9BR,KA+BYS,IAAcC,cA/B1B,KAgCcC,IAAwBC,mBAhCtC,KAmCYL,EAnCZ,UAoCsBhC,EAAkB,uBAAD,OACRiC,EADQ,gBACeA,EADf,UApCvC,0BA+BMK,KA/BN,KAgCMC,OAhCN,KAiCMC,MAAO,EACPC,OAAQ,mBACRC,KAnCN,KAoCMC,SApCN,WA8BgBC,KA9BhB,4BAyCMZ,EAzCN,6BA0CIT,EAAIE,QA1CR,MA2CYS,IAAcW,MA3C1B,MA4CcT,IAAwBC,mBA5CtC,MA8CgBS,IAAc,GA9C9B,UAiDiB9C,EAAkB,sBAAD,OACJgC,EADI,gBACYA,EADZ,SAjDlC,4BA2CMM,KA3CN,MA4CMC,OA5CN,MA6CMC,MAAO,EACPO,SA9CN,MA+CMC,QAAQ,EACRC,OAAO,EACPC,IAjDN,MAoDMC,GAAI,IApDV,KA0CgBP,KA1ChB,yBAyDErB,EAAIC,WAAaG,EAAiByB,KAAI,SAACC,GACrC,IAAMC,EAAUnC,EAAS7B,MAAK,SAACiE,GAAD,OAAQA,EAAGhE,KAAO8D,EAAGG,iBACnD,OAAQF,EAAQG,eACd,IAAK,iBACH,MAAO,CACLlE,GAAI+D,EAAQI,YACZrG,KAAM+D,EAAakC,EAAQI,cAG/B,IAAK,MACH,MAAO,CACLnE,GAAI+D,EAAQI,YACZrG,KAAM6D,EAAU5B,MAAK,SAACqE,GAAD,OAAQA,EAAGpE,KAAO+D,EAAQI,eAAcrG,UArEvE,cA2EsBuE,GA3EtB,4DA2EWgC,EA3EX,QA4EQC,EAAiC,GA5EzC,MA6EYD,EAAQE,OA7EpB,eA8EW5B,IAAc6B,KA9EzB,WA0HW7B,IAAcC,cA1HzB,WA2JWD,IAAcW,MA3JzB,8CAAAlF,EAAA,0CAAAA,EAAA,yDAgFgBqG,EAAWnC,EAAS+B,EAAQK,gBAE9B5E,EAAQ,CAAEE,GAAI,EAAGlC,KAAM,IACvB2G,EAASE,eAAe,GAAGV,gBACvBF,EAAUnC,EAAS7B,MACvB,SAACiE,GAAD,OAAQA,EAAGhE,KAAOyE,EAASE,eAAe,GAAGV,iBAE/CnE,EAAME,GAAK+D,EAAQI,aAErBrE,EAAMhC,KAAO2G,EAASG,kBAClBC,EAAWJ,EAASK,OAAOnG,OAAhB,gBAEToD,EAAc,QAAU,GAFf,0BAGOI,EAHP,gBAITsC,EAASK,OAAO,GAAGC,QAJV,QAMX,GAGFN,EAASK,OAAOnG,QAChB8F,EAASK,OAAO,GAAGC,QAAQC,WAAW,eAEhCjB,EAAUnC,EAAS7B,MACvB,SAACiE,GAAD,OAAQA,EAAGhE,KAAOyE,EAASE,eAAe,GAAGV,iBAE/CY,EAAQ,oCAAgCd,EAAQkB,UAAxC,YAAqDlB,EAAQmB,KAA7D,gBAAyET,EAASK,OAAO,GAAGC,QAA5F,SAzGpB,KA6GkBV,EAAQE,OA7G1B,KA+GcF,EAAQc,mBACRtC,IAAwBC,mBAhHtC,KAiHmBuB,EAAQe,MAjH3B,KAkHYtF,EAlHZ,KAmHkB2E,EAASY,MACRZ,EAASK,OAAOnG,OApHnC,kCAqHsB8B,EAAkBoE,GArHxC,iDAsHgB,GAtHhB,kBA4GUP,EA5GV,CA6GYvB,KA7GZ,KA8GYC,OA9GZ,KAiHYC,MAjHZ,KAkHYnD,MAlHZ,KAmHYqD,KAnHZ,KAoHYmC,MApHZ,6GA4HgBC,EAAgBhD,EAAkB8B,EAAQK,gBAC1Cc,EACJC,IAAkBF,EAAcG,YA9H5C,MAiIkBrB,EAAQE,OAjI1B,MAmIcF,EAAQc,mBACRtC,IAAwBC,mBApItC,MAqImBuB,EAAQe,MArI3B,MAsIoBI,EAtIpB,MAuIkBD,EAAcI,UAEI,mBAAtBH,EAzId,kCA0IwB/E,EAAkB,wBAAD,OACG0B,EADH,gBACqBoD,EAAcK,aADnC,SA1IzC,gDA6IwC,qBAAtBJ,EA7IlB,kCA8IwB/E,EAAkB,uBAAD,OACE8E,EAAcK,aADhB,gBACoCL,EAAcK,aADlD,UA9IzC,gDAiJwC,UAAtBJ,EAjJlB,kCAkJwB/E,EAAkB,kBAAD,OACH8E,EAAcI,UADX,gBAEnBJ,EAAcI,UAAUE,MAAM,KAAK,GAFhB,SAlJzC,mDAuJkB,GAvJlB,mEAgIUvB,EAhIV,CAiIYvB,KAjIZ,MAkIYC,OAlIZ,MAqIYC,MArIZ,MAsIYC,OAtIZ,MAuIYC,KAvIZ,MAwIYC,SAxIZ,wCA6JgB0C,EAAYtD,EAAU6B,EAAQK,gBA7J9C,MAgKkBL,EAAQE,OAhK1B,MAkKcF,EAAQc,mBACRtC,IAAwBC,mBAnKtC,MAoKmBuB,EAAQe,MApK3B,MAqKsB7B,IAAcuC,EAAUC,UArK9C,QAsKsBD,EAAUE,IAtKhC,QAuKqBF,EAAUG,IACdH,EAAUE,IAxK3B,kCAyKsBvF,EAAkB,sBAAD,OACCqF,EAAUE,IADX,gBACsBF,EAAUE,IADhC,SAzKvC,mDA4KgB,GA5KhB,wBA6KgBF,EAAUG,GA7K1B,kCA8KsBxF,EAAkB,sCAAD,OACiBqF,EAAUG,GAD3B,SA9KvC,mDAiLgB,GAjLhB,2BA+JU3B,EA/JV,CAgKYvB,KAhKZ,MAiKYC,OAjKZ,MAoKYC,MApKZ,MAqKYO,SArKZ,MAsKYC,OAtKZ,MAuKYC,MAvKZ,MAwKYC,IAxKZ,MA6KYC,GA7KZ,sCAsLQU,EAAS,CACPvB,KAAMsB,EAAQE,OACdvB,OACEqB,EAAQc,mBACRtC,IAAwBC,mBAC1BG,MAAOoB,EAAQe,OA3LzB,SAgMIpD,EAAIE,QAAQmB,KAAKiB,GAhMrB,qLAmMStC,GAnMT,qEADgB,wDAsMhB,CAACJ,EAAUC,EAAcF,IAItB,SAASuE,IACd,OAAO,IAAIC,MACRC,mBAAmB,QAAS,CAAEC,SAAU,eACxCR,MAAM,KACNS,MAAM,EAAG,GACTC,KAAK,KAGH,SAASC,IACd,OAAO,IAAIC,gBAAgBC,cAAcC,QAGpC,SAASC,EAAcC,GAE5B,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAIF,EAAKE,GAAK,EAAG,CAG/B,IAFA,IAAMC,EAAU,mBAAmBnB,MAAM,IACrCoB,EAAQ,IACHC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BD,GAASD,EAAQG,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnCP,EAAOzD,KAAK4D,GAEd,OAAOH,I,0FCxeHQ,EAAkBC,aAAW,SAACC,GAAD,YAAY,CAC7CC,OAAQ,CACNC,WAAY,QAEdC,QAAS,CACPC,UAAWJ,EAAMK,QAAQ,GACzBC,aAAcN,EAAMK,QAAQ,GAC5BE,WAAY,OACZC,YAAa,QAEfC,MAAO,CACLC,OAAQV,EAAMK,QAAQ,EAAG,IAE3BM,KAAM,CACJT,WAAYF,EAAMY,WAAWC,gBAE/BC,eAAa,mBACVd,EAAMe,YAAYC,KAAK,MAAQ,CAC9BC,OAAQjB,EAAMK,QAAQ,IACtBa,MAAOlB,EAAMK,QAAQ,MAHZ,cAKVL,EAAMe,YAAYI,GAAG,MAAQ,CAC5BF,OAAQjB,EAAMK,QAAQ,IACtBa,MAAOlB,EAAMK,QAAQ,MAPZ,GAUbe,WAAY,CACVC,cAAe,mB,wMClBNC,EAOR,SAAC,GAOC,IANLC,EAMI,EANJA,KACAC,EAKI,EALJA,WACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,cAEQxJ,EAAWD,cAAXC,OACR,OAAQmJ,GACN,IAAK,WACH,OAAO,kBAAC,IAAeG,EAAgBD,GACzC,IAAK,aACH,OACE,kBAAC,IAAD,iBAAgBE,EAAhB,CAAiClC,MAAM,gBACpCrH,EAAOoJ,EAAYC,EAAUG,IAGpC,IAAK,OACH,OACE,kBAAC,IAAD,CAAMC,WAAS,EAACC,UAAU,UACxB,kBAAC,IAAD,iBAAgBJ,EAAhB,CAA+BjC,MAAM,gBAClCgC,GAEH,kBAAC,IAAD,iBAAgBE,EAAhB,CAAiClC,MAAM,kBACpCrH,EAAOoJ,EAAYC,EAAUG,OAO7BG,EAMR,SAAC,GAA0E,IAAxER,EAAuE,EAAvEA,KAAM5E,EAAiE,EAAjEA,YAAa+E,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,cAAoB,EAC5DvL,YAA0B,kBAApC6B,EADsE,sBAE/CC,cAAtBC,EAFqE,EAErEA,OAAQZ,EAF6D,EAE7DA,UAF6D,EAInD3B,qBAJmD,mBAItEyC,EAJsE,KAI/D0J,EAJ+D,KAY7E,GANA9L,qBAAU,WACJgC,EAAOf,QACT6K,EAAS9J,EAAOK,MAAK,SAAC0J,GAAD,OAAOA,EAAEzJ,KAAOmE,QAEtC,CAACzE,EAAQyE,KAERrE,EAiFF,OAAO,kBAAC,IAAD,MAhFP,OAAQiJ,GACN,IAAK,WACH,OACE,kBAAC,IAAD,iBAAgBG,EAAhB,CAA+BjC,MAAM,gBAClCnH,EAAMG,UADT,IACqBH,EAAMI,WAG/B,IAAK,aACH,MAAO,CAAC,QAAS,QAAS,KAAM,MAAMC,SAASnB,EAAUoB,UACvD,kBAAC,IAAD,iBAAgB+I,EAAhB,CAAiClC,MAAM,gBACpCnH,EAAMG,UACHL,EAAO,kBAAD,OACcuE,EADd,cAEJrE,EAAMG,UACNmJ,GAEF,GAAI,IACPxJ,EAAO,kBAAD,OACauE,EADb,cAELrE,EAAMI,UACNkJ,IAIJ,kBAAC,IAAD,KACGxJ,EAAO,kBAAD,OACauE,EADb,cAELrE,EAAMI,UACNkJ,GACC,IACFtJ,EAAMG,UACHL,EAAO,kBAAD,OACcuE,EADd,cAEJrE,EAAMG,UACNmJ,GAEF,IAGV,IAAK,OACH,OACE,kBAAC,IAAD,CAAMC,WAAS,EAACC,UAAU,UACxB,kBAAC,IAAeJ,EACbpJ,EAAMG,UADT,IACqBH,EAAMI,WAE1B,CAAC,QAAS,QAAS,KAAM,MAAMC,SAASnB,EAAUoB,UACjD,kBAAC,IAAD,eAAY6G,MAAM,iBAAoBkC,GACnCrJ,EAAMG,UACHL,EAAO,kBAAD,OACcuE,EADd,cAEJrE,EAAMG,UACNmJ,GAEF,GAAI,IACPxJ,EAAO,kBAAD,OACauE,EADb,cAELrE,EAAMI,UACNkJ,IAIJ,kBAAC,IAAD,eAAYnC,MAAM,iBAAoBkC,GACnCvJ,EAAO,kBAAD,OACauE,EADb,cAELrE,EAAMI,UACNkJ,GACC,IACFtJ,EAAMG,UACHL,EAAO,kBAAD,OACcuE,EADd,cAEJrE,EAAMG,UACNmJ,GAEF,OAWPM,EAMR,SAAC,GAMC,IALLX,EAKI,EALJA,KACAY,EAII,EAJJA,cACAT,EAGI,EAHJA,cACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,cACI,EACmBvL,YAAiC,qBAAjD+L,EADH,sBAGkCvM,qBAHlC,mBAGGwM,EAHH,KAGgBC,EAHhB,KAWJ,GANApM,qBAAU,WACJkM,EAAajL,QACfmL,EAAeF,EAAa7J,MAAK,SAACgK,GAAD,OAAQA,EAAG/J,KAAO2J,QAEpD,CAACA,EAAeC,IAEfC,EAAa,CACf,IAAIG,EAAU,GACd,OAAQH,EAAYI,sBAClB,IAAK,OACHD,EAAO,4BAAwBH,EAAY7J,IAC3C,MACF,IAAK,aACHgK,EAAO,0BACPZ,EAAgBc,OAAOC,OAAO,GAAIf,EAAe,CAC/CgB,MAAOP,EAAYQ,4BAErB,MACF,IAAK,YACHL,EAAO,iCAA6BH,EAAYS,wBAChDlB,EAAgBc,OAAOC,OAAO,GAAIf,EAAe,CAC/CmB,KAAMV,EAAYQ,4BAEpB,MACF,IAAK,cACHL,EAAO,2BACPZ,EAAgBc,OAAOC,OAAO,GAAIf,EAAe,CAC/CoB,MAAOX,EAAYY,+BAErB,MACF,QACET,EAAO,uBAAmBH,EAAYI,sBAG1C,OACE,kBAACnB,EAAD,CACEC,KAAMA,EACNC,WAAYgB,EACZf,SAAUY,EAAYa,SACtBxB,cAAeA,EACfC,gBAAiBA,EACjBC,cAAeA,IAInB,OAAO,gC,kCCgWJ,IAAKzG,EAWAE,EA6DA4C,EAsCAlC,EAsHAoH,EApOZ,0K,SAAYhI,O,eAAAA,I,eAAAA,I,mCAAAA,I,yBAAAA,I,qCAAAA,I,2BAAAA,I,iCAAAA,I,kBAAAA,M,cAWAE,O,aAAAA,I,4CAAAA,M,cA6DA4C,O,eAAAA,I,qBAAAA,I,uBAAAA,I,qBAAAA,I,uBAAAA,I,6BAAAA,I,6BAAAA,I,uCAAAA,I,iBAAAA,I,6BAAAA,I,gCAAAA,I,sCAAAA,I,4CAAAA,I,8CAAAA,I,0CAAAA,I,4CAAAA,I,4CAAAA,I,kDAAAA,I,0BAAAA,I,kBAAAA,I,sBAAAA,I,wBAAAA,I,kDAAAA,I,wCAAAA,I,oCAAAA,I,sCAAAA,I,uCAAAA,M,cAsCAlC,O,yBAAAA,I,iBAAAA,I,iCAAAA,I,gBAAAA,M,cAsHAoH,K,sBAAAA,E,4BAAAA,E,wCAAAA,E,8BAAAA,E,gCAAAA,E,0BAAAA,E,kDAAAA,E,qDAAAA,M,wGChuBNpC,EAAc,CAAC,KAAM,KAAM,KAAM,KAAM,MAGvCqC,EAA6C,CACjDC,GAFkC,GAGlCC,GAAI,GAoISC,IA7Ff,YASG,IARDC,EAQA,EARAA,cACAC,EAOA,EAPAA,SACAvM,EAMA,EANAA,KACUwM,EAKV,EALAC,SACAC,EAIA,EAJAA,UACAC,EAGA,EAHAA,iBAKMF,EA9BR,SACED,GAIA,IAAMC,EAAQ,eACRD,GAAaN,GAUnB,OANArC,EAAY+C,SAAQ,SAACC,EAAGxE,EAAG3I,GACpB+M,EAASI,KACZJ,EAASI,GAAKxE,EAAI,EAAIoE,EAAS/M,EAAE2I,EAAI,IAnCP,OAuC3BoE,EAcUK,CAAmCN,GAE9CO,EAjDR,WACE,IAAMjE,EAAQkE,cAad,OATwBnD,EAAY1E,KAClC,SAAC4H,GAAD,OAGEE,YAAcnE,EAAMe,YAAYC,KAAKiD,KAAgBA,KAKlC1L,KAAK6L,UAAYrD,EAAYA,EAAY5J,OAAS,GAmCtDkN,GAJnB,EAM8BxO,oBAAkB,GANhD,mBAMOyO,EANP,KAMgBC,EANhB,KAQMC,EAAWvO,iBACf,IAAIwO,sBAAqB,SAACC,GAAD,OAAajB,EAASiB,EAASH,KAAa,CACnEI,UAAW,MAGTC,EAAiB3O,iBAAuB,MAE9CC,qBAAU,WACRqO,GAAW,KACV,CAACrN,IAEJhB,qBAAU,WACR,IAAM2O,EAAkBL,EAASrO,QAC3B2O,EAAiBF,EAAezO,QAGtC,OAFI2O,GAAgBD,EAAgBE,QAAQD,GAErC,WACDA,GACFD,EAAgBG,UAAUF,OAKhC,IACMG,EAAc,GADCtB,EAASM,GAExBiB,EAAkBhO,EAAKC,OAAS8N,EAA4B,EAAdA,EAEpD,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAMpD,WAAS,EAACC,UAAU,MAAMzB,QAAS,GACtCnJ,EAAKC,OACFD,EAAKmF,KAAI,SAACnF,EAAMqI,GAAP,OACP,kBAAC,IAAD,CACE4F,IAAKjO,EAAKsB,GACV4M,MAAI,EACJ/B,GAAIM,EAASN,GACbgC,GAAI1B,EAAS0B,GACb/B,GAAIK,EAASL,GACbgC,GAAI3B,EAAS2B,GACbC,GAAI5B,EAAS4B,GACbC,QAAS,WACH3B,GAAkBA,EAAiB3M,KAGzC,kBAACsM,EAAD,eAAetM,KAAMA,EAAMuO,MAAOlG,GAAOqE,QAG7C,MAEN,kBAAC,IAAD,CACE/B,WAAS,EACTC,UAAU,MACV4D,IAAKd,EACLe,MAAO,CAAEC,QAAStB,EAAU,OAAS,OAAQuB,WAAY,OACzDxF,QAAS,GAERyF,MAAMC,KAAK,CACV5O,OAAQ+N,IACP7I,KAAI,SAAC2J,EAAGzG,GAAJ,OACL,kBAAC,IAAD,CACE4F,IAAG,gBAAW5F,GACd6F,MAAI,EACJ/B,GAAIM,EAASN,GACbgC,GAAI1B,EAAS0B,GACb/B,GAAIK,EAASL,GACbgC,GAAI3B,EAAS2B,GACbC,GAAI5B,EAAS4B,IAEb,kBAAC/B,EAAD,c,kCC5LZ,sDAqGIyC,EAAwBC,cAAiB,SAAkBC,EAAOT,GACpE,IAAIU,EAAmBD,EAAME,UACzBA,OAAiC,IAArBD,EAA8B,QAAUA,EACpDE,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAmBL,EAAMM,UACzBC,OAAiC,IAArBF,EAA8B,OAASA,EACnDvF,EAASkF,EAAMlF,OACf0F,EAAiBR,EAAMS,QACvBA,OAA6B,IAAnBD,EAA4B,OAASA,EAC/CzF,EAAQiF,EAAMjF,MACdnJ,EAAQ8O,YAAyBV,EAAO,CAAC,YAAa,UAAW,YAAa,YAAa,SAAU,UAAW,UAEhHW,EAAc1C,QAAQrM,EAAMgP,UAChC,OAAoBb,gBAAoBQ,EAAWM,YAAS,CAC1DtB,IAAKA,EACLa,UAAWU,YAAKX,EAAQY,KAAMZ,EAAQM,GAAUL,EAAWO,GAAe,CAACR,EAAQa,cAAejG,GAASoF,EAAQc,YAAanG,GAAUqF,EAAQe,aAA2B,IAAdhB,GAAuBC,EAAQD,KAC7LtO,EAAO,CACR4N,MAAOqB,YAAS,CACd9F,MAAOA,EACPD,OAAQA,GACPlJ,EAAM4N,aAmDE2B,iBAvKK,SAAgBtH,GAClC,MAAO,CAELkH,KAAM,CACJtB,QAAS,QAET2B,gBAAiBC,YAAKxH,EAAMyH,QAAQC,KAAKC,QAAgC,UAAvB3H,EAAMyH,QAAQlM,KAAmB,IAAO,KAC1F0F,OAAQ,SAIVyG,KAAM,CACJtH,UAAW,EACXE,aAAc,EACdW,OAAQ,OACR2G,gBAAiB,QACjBC,UAAW,iBACXC,aAAc9H,EAAM+H,MAAMD,aAC1B,iBAAkB,CAChB3H,QAAS,aAKb6H,KAAM,GAGNC,OAAQ,CACNH,aAAc,OAIhBI,MAAO,CACL7B,UAAW,yCAEb,mBAAoB,CAClB,KAAM,CACJ8B,QAAS,GAEX,MAAO,CACLA,QAAS,IAEX,OAAQ,CACNA,QAAS,IAKbC,KAAM,CACJC,SAAU,WACVC,SAAU,SACV,WAAY,CACVjC,UAAW,kCACXkC,WAAY,uCAAuCC,OAAOxI,EAAMyH,QAAQ3K,OAAO2L,MAAO,kBACtFtI,QAAS,KACTkI,SAAU,WACVR,UAAW,oBAEXa,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,IAAK,IAGT,kBAAmB,CACjB,KAAM,CACJhB,UAAW,qBAEb,MAAO,CAELA,UAAW,oBAEb,OAAQ,CACNA,UAAW,qBAKfV,aAAc,CACZ,QAAS,CACP2B,WAAY,WAKhB1B,WAAY,CACV2B,SAAU,eAIZ1B,WAAY,CACVpG,OAAQ,WA4EoB,CAChC3K,KAAM,eADOgR,CAEZrB,I,kCC/KH,uDAaI+C,EAAoB9C,cAAiB,SAAcC,EAAOT,GAC5D,IAAIY,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClB0C,EAAgB9C,EAAM+C,OACtBA,OAA2B,IAAlBD,GAAmCA,EAC5ClR,EAAQ8O,YAAyBV,EAAO,CAAC,UAAW,YAAa,WAErE,OAAoBD,gBAAoBiD,IAAOnC,YAAS,CACtDT,UAAWU,YAAKX,EAAQY,KAAMX,GAC9B6C,UAAWF,EAAS,EAAI,EACxBxD,IAAKA,GACJ3N,OA6BUuP,gBA9CK,CAElBJ,KAAM,CACJoB,SAAU,WA2CoB,CAChChS,KAAM,WADOgR,CAEZ0B,I,kCCvDH,8CAeIK,EAA2BnD,cAAiB,SAAqBC,EAAOT,GAC1E,IAAIY,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBC,EAAmBL,EAAMM,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDzO,EAAQ8O,YAAyBV,EAAO,CAAC,UAAW,YAAa,cAErE,OAAoBD,gBAAoBQ,EAAWM,YAAS,CAC1DT,UAAWU,YAAKX,EAAQY,KAAMX,GAC9Bb,IAAKA,GACJ3N,OAgCUuP,gBAnDK,CAElBJ,KAAM,CACJoC,QAAS,GACT,eAAgB,CACdC,cAAe,MA8Ca,CAChCjT,KAAM,kBADOgR,CAEZ+B,I,kCC3DH,yEAgGIG,EAA0BtD,cAAiB,SAAoBC,EAAOT,GACxE,IAAIY,EAAUH,EAAMG,QAChBC,EAAYJ,EAAMI,UAClBkD,EAAwBtD,EAAMuD,iBAC9BA,OAA6C,IAA1BD,GAA2CA,EAE9DE,GADSxD,EAAMzF,OACFyF,EAAMyD,QAEnB7R,GADUoO,EAAMS,QACRC,YAAyBV,EAAO,CAAC,UAAW,YAAa,mBAAoB,SAAU,SAAU,aAEzG0D,EAAiBC,cACjBF,EAASD,EAES,qBAAXC,GAA0BC,IACnCD,EAASC,EAAeE,QAAUF,EAAeG,SAAWH,EAAeI,cAG7E,IAAIC,EAAMC,YAAiB,CACzBhE,MAAOA,EACP0D,eAAgBA,EAChBO,OAAQ,CAAC,SAAU,aAErB,OAAoBlE,gBAAoBmE,IAAWrD,YAAS,CAC1D,cAAe4C,EACfrD,UAAWU,YAAKX,EAAQY,KAAMX,EAAWsD,GAAkBvD,EAAQgE,aAAcZ,GAAoBpD,EAAQiE,SAAUX,GAAUtD,EAAQsD,OAAuB,UAAfM,EAAIxJ,QAAsB4F,EAAQkE,YAAa,CAC9L,OAAUlE,EAAQyD,OAClB,SAAYzD,EAAQmE,UACpBP,EAAItD,UACNN,QAAS,CACP0D,QAAS1D,EAAQ0D,QACjBU,SAAUpE,EAAQoE,SAClBC,MAAOrE,EAAQqE,MACfC,SAAUtE,EAAQsE,SAClBC,SAAUvE,EAAQuE,UAEpBnF,IAAKA,GACJ3N,OAsEUuP,iBAjMK,SAAgBtH,GAClC,MAAO,CAELkH,KAAM,CACJtB,QAAS,QACTgC,gBAAiB,YAInBoC,QAAS,GAGTU,SAAU,GAGVC,MAAO,GAGPC,SAAU,GAGVC,SAAU,GAGVP,YAAa,CACXjC,SAAU,WACVM,KAAM,EACNE,IAAK,EAELhB,UAAW,+BAIb2C,YAAa,CAEX3C,UAAW,+BAIb+B,OAAQ,CACN/B,UAAW,kCACXD,gBAAiB,YAInB2C,SAAU,CACRO,WAAY9K,EAAM+K,YAAYC,OAAO,CAAC,QAAS,aAAc,CAC3DC,SAAUjL,EAAM+K,YAAYE,SAASC,QACrCC,OAAQnL,EAAM+K,YAAYI,OAAOC,WAKrCrB,OAAQ,CAKNsB,OAAQ,EACRC,cAAe,OACfzD,UAAW,iCACX,gBAAiB,CACfA,UAAW,kCAEb,WAAY,CACVA,UAAW,oCACX,gBAAiB,CACfA,UAAW,sCAMjB4C,SAAU,CAERY,OAAQ,EACRC,cAAe,OACfzD,UAAW,iCACX,gBAAiB,CACfA,UAAW,kCAEb,WAAY,CACVA,UAAW,yCA+Ge,CAChCvR,KAAM,iBADOgR,CAEZkC,I,6PC/LG+B,EAAYxL,aAAW,SAACC,GAAD,MAAY,CACvCwL,MAAO,CACL3F,WAAY,KACZ4F,eAAgB,WAElBC,KAAM,CACJC,OAAQ,WAEV1L,OAAQ,GACR,WAAY,CACVqJ,QAAStJ,EAAMK,QAAQ,KAAM,WCE3BuL,EAAsE,CAC1EC,KDCuD,SAAC,GAAc,IAAZ3U,EAAW,EAAXA,KACpDoP,EAAUiF,IACRtT,EAAqB6T,qBAAWC,KAAhC9T,iBAER,OAAKf,EAcH,kBAAC,WAAD,KACE,kBAAC8R,EAAA,EAAD,CAAMzC,UAAWD,EAAQoF,MACvB,kBAACM,EAAA,EAAD,CAAMnK,WAAS,EAACoK,WAAW,UACzB,kBAACD,EAAA,EAAD,CAAM5G,MAAI,EAAC/B,GAAI,IACb,kBAACgG,EAAA,EAAD,CAAa1D,MAAO,CAAE4D,cAAe,SACnC,kBAACyC,EAAA,EAAD,CAAMnK,WAAS,EAACC,UAAU,SAASzB,QAAS,GAC1C,kBAAC2L,EAAA,EAAD,CAAM5G,MAAI,GACR,kBAAC9D,EAAA,EAAD,CACEC,KAAMtJ,EACNuJ,WAAU,yBAAoBtK,EAAKsB,IACnCiJ,SAAUvK,EAAKgM,SACfxB,cAAe,CACbkF,QAAS,YACTL,UAAWD,EAAQrG,iBAxBnC,kBAAC+I,EAAA,EAAD,CAAMzC,UAAWD,EAAQoF,MAEvB,kBAACrC,EAAA,EAAD,KACE,kBAAC6C,EAAA,EAAD,CAAYtF,QAAQ,YAAYL,UAAWD,EAAQrG,QACjD,kBAACgG,EAAA,EAAD,CAAUW,QAAQ,OAAO1F,MAAM,aC+J5BiL,UAhK4B,WACzC,IAAMC,EAAgBtM,cACdrI,EAAM4U,cAAN5U,EACAQ,EAAqB6T,qBAAWC,KAAhC9T,iBAHuC,EAKd5B,YAC/B,qBADKiW,EALwC,sBAQnBjW,YAA6B,qBAAlDkW,EARwC,sBAUA1W,mBAC7C,IAX6C,mBAUxC2W,EAVwC,KAUrBC,EAVqB,OAajB5W,mBAAiB,GAbA,mBAaxCwC,EAbwC,KAa/BqU,EAb+B,OAcT7W,mBAAiB,aAdR,mBAcxC8W,EAdwC,KAc3BC,EAd2B,OAgBxB/W,mBACpBgX,aAAanT,QAAQ,8BACpB,QAFGoT,EAhBwC,sBAoBdnX,YAAoB,GApBN,mBAoBxCoX,EApBwC,KAoBlCC,EApBkC,KAoBzBC,EApByB,OAqBrBtX,YAAoB,IArBC,mBAqBxCuX,EArBwC,KAqBjCC,EArBiC,OAsBFxX,aAAqB,GAtBnB,mBAsBtCyX,EAtBsC,KAsBrBC,EAtBqB,OAuBZ1X,aAAqB,GAvBT,oBAuBtC2X,GAvBsC,MAuB1BC,GAvB0B,SAwBO5X,YAEpD,IA1B6C,qBAwBxC6X,GAxBwC,MAwB3BC,GAxB2B,MAwBXC,GAxBW,MA4B/CxX,qBAAU,WACRyX,SAASC,MAAQnW,EAAE,gCAClB,CAACA,IAEJvB,qBAAU,WACR,GAAIoW,EAAuBnV,OAAQ,CACjC,IAAImI,EAAM,YAAOgN,GAGjBhN,GADAA,EAASA,EAAOuO,QAAO,SAAC5L,GAAD,OAAOA,EAAEtF,cAAgBtE,MAChCwV,QAAO,SAAC5L,GAAD,OAAOA,EAAE6L,uBAAyBnB,KACzDe,GAAepO,GACfmN,EAAkB,IAClBQ,EAAQ,MAET,CAACX,EAAwBW,EAASS,GAAgBf,EAAatU,IAElEnC,qBAAU,WACRuW,GAAkB,SAACsB,GAAD,4BACbA,GADa,YArDtB,SACEA,EACAhB,EACAG,GAEA,OAAOa,EAAOjP,MAAMoO,GAASH,EAAO,GAAIG,EAAQH,GAkDzCiB,CAA0BR,GAAaT,EAAMG,QAElDG,GAAgB,KACf,CAACN,EAAMG,EAAOG,EAAiBG,KAElCtX,qBAAU,WACRqX,GAAWnJ,QAAQkI,EAAuBnV,WACzC,CAACoW,GAAYjB,IAuBhB,OACE,kBAAC,WAAD,KACE,kBAACJ,EAAA,EAAD,CAAYtF,QAAQ,KAAKL,UAAW6F,EAAcnM,QAC/CxI,EAAE,uBADL,MACgCA,EAAE,qBAElC,kBAACwW,EAAA,EAAD,CAAW1H,UAAW6F,EAAcjM,QAAS4I,SAAS,MACpD,kBAACiD,EAAA,EAAD,CAAMnK,WAAS,EAACxB,QAAS,GACtBkM,EAAkBpV,OACjB,kBAAC,WAAD,KACE,kBAAC6U,EAAA,EAAD,CAAM5G,MAAI,EAAC/B,GAAI,GAAIC,GAAI,GACrB,kBAAC4K,EAAA,EAAD,CAAavI,MAAO,CAAEzE,MAAO,SAC3B,kBAACsI,EAAA,EAAD,CAAYhR,GAAG,qBACZf,EAAE,6BAEL,kBAAC0W,EAAA,EAAD,CACEC,QAAQ,oBACRC,MAAOhW,EACPiW,SAAU,SAACC,GACT7B,EAAW6B,EAAEC,OAAOH,SAGrB9B,EAAkBlQ,KAAI,SAACoS,GAAD,OACrB,kBAACC,EAAA,EAAD,CAAUL,MAAOI,EAAG9R,YAAawI,IAAKsJ,EAAG9R,aACvC,kBAAC,IAAD,CACE4E,KAAMtJ,EACN0E,YAAa8R,EAAG9R,sBAQ5B,KACH+F,OAAOiM,OAAOxL,KAAsBhM,OACnC,kBAAC,WAAD,KACE,kBAAC6U,EAAA,EAAD,CAAM5G,MAAI,EAAC/B,GAAI,GAAIC,GAAI,GACrB,kBAAC4K,EAAA,EAAD,CAAavI,MAAO,CAAEzE,MAAO,SAC3B,kBAACsI,EAAA,EAAD,CAAYhR,GAAG,qBACZf,EAAE,yBAEL,kBAAC0W,EAAA,EAAD,CACEC,QAAQ,sBACRC,MAAO1B,EACP2B,SAAU,SAACC,GACT3B,EAAe2B,EAAEC,OAAOH,SAGzB3L,OAAOiM,OAAOxL,KAAsB9G,KAAI,SAACuS,GAAD,OACvC,kBAACF,EAAA,EAAD,CAAUL,MAAOO,EAAKzJ,IAAKyJ,GACzB,kBAAC1C,EAAA,EAAD,KAAazU,EAAE,gBAAD,OAAiBmX,aAOzC,MAEN,kBAACrL,EAAA,EAAD,CACEC,cAAeoI,EAASkB,GACxBrJ,SAlFS,SACfiB,EACAH,GAEK+I,GAAWnX,UAEduO,EAAQ,GAAGmK,gBACXzB,EAAgBjX,WACdsX,GAAetX,QAAQgB,QACvBsW,GAAetX,QAAQgB,OAAS6V,EAAQ7W,QAAUgX,EAAShX,UAE7D8W,GAAQ,SAACF,GAAD,OAAUA,EAAO,KACzBM,GAAgB,IAEhBI,GAAetX,QAAQgB,QACvBsW,GAAetX,QAAQgB,QAAU6V,EAAQ7W,QAAUgX,EAAShX,SAE5DoO,GAAW,KAkEPrN,KAAMsV,EACN7I,SACG,CACCkI,KAAM,CACJxI,GAAI,GACJC,GAAI,GAENwL,OAAQ,CACNzL,GAAI,IAEN0L,MAAO,CACL1L,GAAI,KAEIyJ","file":"static/js/34.db460521.chunk.js","sourcesContent":["import Axios from \"axios\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { WebpMachine } from \"webp-hero\";\nimport PQueue from \"p-queue\";\nimport localforage from \"localforage\";\nimport {\n  IGachaInfo,\n  ICardInfo,\n  IGameChara,\n  IMusicInfo,\n  ISkillInfo,\n  ICardRarity,\n  ICharacterRank,\n  IMusicVocalInfo,\n  IOutCharaProfile,\n  IUserInformationInfo,\n  IMusicDifficultyInfo,\n  IMusicTagInfo,\n  IReleaseCondition,\n  IMusicDanceMembers,\n  IEventInfo,\n  IEventDeckBonus,\n  IGameCharaUnit,\n  IResourceBoxInfo,\n  IHonorInfo,\n  ICardEpisode,\n  ContentTransModeType,\n  ITipInfo,\n  ICharaProfile,\n  ICharacter2D,\n  IMobCharacter,\n  IMusicMeta,\n  IScenarioData,\n  IUnitProfile,\n  IUnitStory,\n  SnippetAction,\n  SpecialEffectType,\n  SnippetProgressBehavior,\n  SoundPlayMode,\n  IEventStory,\n  IHonorMission,\n  IBeginnerMission,\n  ICharacterMission,\n  IHonorGroup,\n  INormalMission,\n  IEventCard,\n  IMusicAchievement,\n} from \"./../types.d\";\nimport { assetI18n, useAssetI18n } from \"./i18n\";\nimport { useLocation } from \"react-router-dom\";\n\nconst webpMachine = new WebpMachine();\n\nexport function useRefState<S>(\n  initialValue: S\n): [S, React.MutableRefObject<S>, React.Dispatch<React.SetStateAction<S>>] {\n  const [state, setState] = useState(initialValue);\n  const stateRef = useRef(state);\n  useEffect(() => {\n    stateRef.current = state;\n  }, [state]);\n  return [state, stateRef, setState];\n}\n\nlet masterDataCache: { [key: string]: any[] } = {};\n\nexport function useCachedData<\n  T extends\n    | IGachaInfo\n    | ICardInfo\n    | IGameChara\n    | IMusicInfo\n    | ISkillInfo\n    | ICardRarity\n    | ICharacterRank\n    | IMusicVocalInfo\n    | IOutCharaProfile\n    | IUserInformationInfo\n    | IMusicDifficultyInfo\n    | IMusicTagInfo\n    | IReleaseCondition\n    | IMusicDanceMembers\n    | IEventInfo\n    | IEventDeckBonus\n    | IGameCharaUnit\n    | IResourceBoxInfo\n    | IHonorInfo\n    | ICardEpisode\n    | ITipInfo\n    | ICharaProfile\n    | IUnitProfile\n    | IUnitStory\n    | IMobCharacter\n    | ICharacter2D\n    | IEventStory\n    | IHonorMission\n    | INormalMission\n    | IBeginnerMission\n    | IHonorGroup\n    | ICharacterMission\n    | IEventCard\n    | IMusicAchievement\n>(name: string): [T[], React.MutableRefObject<T[]>] {\n  const [cached, cachedRef, setCached] = useRefState<T[]>([]);\n\n  const fetchCached = useCallback(async () => {\n    const { data }: { data: T[] } = await Axios.get(\n      `${\n        window.isChinaMainland\n          ? process.env.REACT_APP_JSON_DOMAIN_CN + \"/master\"\n          : \"https://sekai-world.github.io/sekai-master-db-diff\"\n      }/${name}.json`\n    );\n    return data;\n  }, [name]);\n\n  useEffect(() => {\n    if (masterDataCache[name] && masterDataCache[name].length)\n      setCached(masterDataCache[name]);\n    else\n      fetchCached().then((data) => {\n        setCached(data);\n        masterDataCache[name] = data;\n      });\n  }, [fetchCached, name, setCached]);\n\n  return [cached, cachedRef];\n}\n\nexport const musicCategoryToName: { [key: string]: string } = {\n  mv: \"3D MV\",\n  original: \"Original MV\",\n  sekai: \"Sekai MV\",\n  image: \"Static Image\",\n  mv_2d: \"2D MV\",\n};\n\nexport const musicTagToName: { [key: string]: string } = {\n  all: \"All\",\n  vocaloid: assetI18n.t(`unit_profile:piapro.name`),\n  light_music_club: assetI18n.t(`unit_profile:light_sound.name`),\n  idol: assetI18n.t(`unit_profile:idol.name`),\n  school_refusal: assetI18n.t(`unit_profile:school_refusal.name`),\n  theme_park: assetI18n.t(`unit_profile:theme_park.name`),\n  street: assetI18n.t(`unit_profile:street.name`),\n  other: \"Other\",\n};\n\nexport function useCharaName(contentTransMode: ContentTransModeType) {\n  const [charas] = useCachedData<IGameChara>(\"gameCharacters\");\n  const { assetT, assetI18n } = useAssetI18n();\n  return useCallback(\n    (charaId: number): string | undefined => {\n      const chara = charas.find((chara) => chara.id === charaId);\n      if (chara?.firstName) {\n        switch (contentTransMode) {\n          case \"original\":\n            return `${chara.firstName} ${chara.givenName}`;\n          case \"translated\":\n            return [\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language)\n              ? `${assetT(\n                  `character_name:${charaId}.firstName`,\n                  chara.firstName\n                )} ${assetT(\n                  `character_name:${charaId}.givenName`,\n                  chara.givenName\n                )}`\n              : `${assetT(\n                  `character_name:${charaId}.givenName`,\n                  chara.givenName\n                )} ${assetT(\n                  `character_name:${charaId}.firstName`,\n                  chara.firstName\n                )}`;\n          case \"both\":\n            return (\n              `${chara.firstName} ${chara.givenName} | ` +\n              ([\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language)\n                ? `${assetT(\n                    `character_name:${charaId}.firstName`,\n                    chara.firstName\n                  )} ${assetT(\n                    `character_name:${charaId}.givenName`,\n                    chara.givenName\n                  )}`\n                : `${assetT(\n                    `character_name:${charaId}.givenName`,\n                    chara.givenName\n                  )} ${assetT(\n                    `character_name:${charaId}.firstName`,\n                    chara.firstName\n                  )}`)\n            );\n        }\n      }\n      return chara?.givenName;\n    },\n    [assetI18n.language, assetT, charas, contentTransMode]\n  );\n}\n\nexport function useMuisicMeta(): [\n  IMusicMeta[],\n  React.MutableRefObject<IMusicMeta[]>\n] {\n  const [cached, cachedRef, setCached] = useRefState<IMusicMeta[]>([]);\n\n  const fetchCached = useCallback(async () => {\n    const { data }: { data: IMusicMeta[] } = await Axios.get(\n      process.env.PUBLIC_URL + \"/metas.json\"\n    );\n    //console.log(data.length);\n    return data;\n  }, []);\n\n  useEffect(() => {\n    let name = \"metas\";\n    if (masterDataCache[name] && masterDataCache[name].length)\n      setCached(masterDataCache[name]);\n    else\n      fetchCached().then((data) => {\n        setCached(data);\n        masterDataCache[name] = data;\n      });\n  }, [fetchCached, setCached]);\n\n  return [cached, cachedRef];\n}\n\nconst queue = new PQueue({ concurrency: 1 });\n\nexport async function getRemoteAssetURL(\n  endpoint: string,\n  setFunc?: CallableFunction\n): Promise<string> {\n  const isWebpSupported = Modernizr.webplossless;\n  const url = `${process.env.REACT_APP_ASSET_DOMAIN}/file/sekai-assets/${endpoint}`;\n\n  if (endpoint.endsWith(\".webp\") && !isWebpSupported) {\n    let dataUrl = await localforage.getItem<string>(url);\n    if (!dataUrl) {\n      const res = await Axios.get(url, { responseType: \"arraybuffer\" });\n      dataUrl = await queue.add<string>(() =>\n        webpMachine.decode(new Uint8Array(res.data))\n      );\n      await localforage.setItem(url, dataUrl);\n      if (setFunc) setFunc(dataUrl);\n      return dataUrl;\n    } else {\n      if (setFunc) setFunc(dataUrl);\n      return dataUrl;\n    }\n  } else {\n    if (setFunc) setFunc(url);\n    return url;\n  }\n}\n\nexport function useProcessedScenarioData(\n  contentTransMode: ContentTransModeType\n) {\n  const [mobCharas] = useCachedData<IMobCharacter>(\"mobCharacters\");\n  const [chara2Ds] = useCachedData<ICharacter2D>(\"character2ds\");\n\n  const getCharaName = useCharaName(contentTransMode);\n\n  return useCallback(\n    async (scenarioPath: string, isCardStory: boolean) => {\n      const ret: {\n        characters: { id: number; name: string }[];\n        actions: { [key: string]: any }[];\n      } = {\n        characters: [],\n        actions: [],\n      };\n\n      if (!chara2Ds.length || !mobCharas.length || !scenarioPath) return ret;\n\n      const { data }: { data: IScenarioData } = await Axios.get(\n        await getRemoteAssetURL(scenarioPath),\n        {\n          responseType: \"json\",\n        }\n      );\n      const {\n        ScenarioId,\n        AppearCharacters,\n        Snippets,\n        TalkData,\n        // LayoutData,\n        SpecialEffectData,\n        SoundData,\n        FirstBgm,\n        FirstBackground,\n      } = data;\n\n      if (FirstBackground) {\n        ret.actions.push({\n          type: SnippetAction.SpecialEffect,\n          isWait: SnippetProgressBehavior.WaitUnitilFinished,\n          delay: 0,\n          seType: \"ChangeBackground\",\n          body: FirstBgm,\n          resource: await getRemoteAssetURL(\n            `scenario/background/${FirstBackground}_rip/${FirstBackground}.webp`\n          ),\n        });\n      }\n      if (FirstBgm) {\n        ret.actions.push({\n          type: SnippetAction.Sound,\n          isWait: SnippetProgressBehavior.WaitUnitilFinished,\n          delay: 0,\n          playMode: SoundPlayMode[0],\n          hasBgm: true,\n          hasSe: false,\n          bgm: await getRemoteAssetURL(\n            `sound/scenario/bgm/${FirstBgm}_rip/${FirstBgm}.mp3`\n          ),\n          se: \"\",\n        });\n      }\n\n      // eslint-disable-next-line array-callback-return\n      ret.characters = AppearCharacters.map((ap) => {\n        const chara2d = chara2Ds.find((ch) => ch.id === ap.Character2dId)!;\n        switch (chara2d.characterType) {\n          case \"game_character\": {\n            return {\n              id: chara2d.characterId,\n              name: getCharaName(chara2d.characterId)!,\n            };\n          }\n          case \"mob\": {\n            return {\n              id: chara2d.characterId,\n              name: mobCharas.find((mc) => mc.id === chara2d.characterId)!.name,\n            };\n          }\n        }\n      });\n\n      for (let snippet of Snippets) {\n        let action: { [key: string]: any } = {};\n        switch (snippet.Action) {\n          case SnippetAction.Talk:\n            {\n              const talkData = TalkData[snippet.ReferenceIndex];\n              // try get character\n              let chara = { id: 0, name: \"\" };\n              if (talkData.TalkCharacters[0].Character2dId) {\n                const chara2d = chara2Ds.find(\n                  (ch) => ch.id === talkData.TalkCharacters[0].Character2dId\n                )!;\n                chara.id = chara2d.characterId;\n              }\n              chara.name = talkData.WindowDisplayName;\n              let voiceUrl = talkData.Voices.length\n                ? `sound/${\n                    isCardStory ? \"card_\" : \"\"\n                  }scenario/voice/${ScenarioId}_rip/${\n                    talkData.Voices[0].VoiceId\n                  }.mp3`\n                : \"\";\n\n              if (\n                talkData.Voices.length &&\n                talkData.Voices[0].VoiceId.startsWith(\"partvoice\")\n              ) {\n                const chara2d = chara2Ds.find(\n                  (ch) => ch.id === talkData.TalkCharacters[0].Character2dId\n                )!;\n                voiceUrl = `sound/scenario/part_voice/${chara2d.assetName}_${chara2d.unit}_rip/${talkData.Voices[0].VoiceId}.mp3`;\n              }\n\n              action = {\n                type: snippet.Action,\n                isWait:\n                  snippet.ProgressBehavior ===\n                  SnippetProgressBehavior.WaitUnitilFinished,\n                delay: snippet.Delay,\n                chara,\n                body: talkData.Body,\n                voice: talkData.Voices.length\n                  ? await getRemoteAssetURL(voiceUrl)\n                  : \"\",\n              };\n            }\n            break;\n          case SnippetAction.SpecialEffect:\n            {\n              const specialEffect = SpecialEffectData[snippet.ReferenceIndex];\n              const specialEffectType =\n                SpecialEffectType[specialEffect.EffectType];\n\n              action = {\n                type: snippet.Action,\n                isWait:\n                  snippet.ProgressBehavior ===\n                  SnippetProgressBehavior.WaitUnitilFinished,\n                delay: snippet.Delay,\n                seType: specialEffectType,\n                body: specialEffect.StringVal,\n                resource:\n                  specialEffectType === \"FullScreenText\"\n                    ? await getRemoteAssetURL(\n                        `sound/scenario/voice/${ScenarioId}_rip/${specialEffect.StringValSub}.mp3`\n                      )\n                    : specialEffectType === \"ChangeBackground\"\n                    ? await getRemoteAssetURL(\n                        `scenario/background/${specialEffect.StringValSub}_rip/${specialEffect.StringValSub}.webp`\n                      )\n                    : specialEffectType === \"Movie\"\n                    ? await getRemoteAssetURL(\n                        `scenario/movie/${specialEffect.StringVal}_rip/${\n                          specialEffect.StringVal.split(\"_\")[0]\n                        }.mp4`\n                      )\n                    : \"\",\n              };\n            }\n            break;\n          case SnippetAction.Sound:\n            {\n              const soundData = SoundData[snippet.ReferenceIndex];\n\n              action = {\n                type: snippet.Action,\n                isWait:\n                  snippet.ProgressBehavior ===\n                  SnippetProgressBehavior.WaitUnitilFinished,\n                delay: snippet.Delay,\n                playMode: SoundPlayMode[soundData.PlayMode],\n                hasBgm: !!soundData.Bgm,\n                hasSe: !!soundData.Se,\n                bgm: soundData.Bgm\n                  ? await getRemoteAssetURL(\n                      `sound/scenario/bgm/${soundData.Bgm}_rip/${soundData.Bgm}.mp3`\n                    )\n                  : \"\",\n                se: soundData.Se\n                  ? await getRemoteAssetURL(\n                      `sound/scenario/se/se_pack00001_rip/${soundData.Se}.mp3`\n                    )\n                  : \"\",\n              };\n            }\n            break;\n          default: {\n            action = {\n              type: snippet.Action,\n              isWait:\n                snippet.ProgressBehavior ===\n                SnippetProgressBehavior.WaitUnitilFinished,\n              delay: snippet.Delay,\n            };\n          }\n        }\n\n        ret.actions.push(action);\n      }\n\n      return ret;\n    },\n    [chara2Ds, getCharaName, mobCharas]\n  );\n}\n\nexport function getJPTime() {\n  return new Date()\n    .toLocaleDateString(\"en-US\", { timeZone: \"Asia/Tokyo\" })\n    .split(\"/\")\n    .slice(0, 2)\n    .join(\"/\");\n}\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport function getColorArray(num: number) {\n  const result = [];\n  for (let i = 0; i < num; i += 1) {\n    const letters = \"0123456789ABCDEF\".split(\"\");\n    let color = \"#\";\n    for (let j = 0; j < 6; j += 1) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    result.push(color);\n  }\n  return result;\n}\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useLayoutStyles = makeStyles((theme) => ({\n  header: {\n    fontWeight: \"bold\",\n  },\n  content: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  },\n  alert: {\n    margin: theme.spacing(1, 0),\n  },\n  bold: {\n    fontWeight: theme.typography.fontWeightBold,\n  },\n  avatarProfile: {\n    [theme.breakpoints.down(\"sm\")]: {\n      height: theme.spacing(10),\n      width: theme.spacing(10),\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      height: theme.spacing(20),\n      width: theme.spacing(20),\n    },\n  },\n  capitalize: {\n    textTransform: \"capitalize\",\n  },\n}));\n\nexport { useLayoutStyles };\n","import { Grid, Typography, TypographyProps } from \"@material-ui/core\";\nimport { StringMap, TOptions } from \"i18next\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ContentTransModeType,\n  IGameChara,\n  IReleaseCondition,\n} from \"../../types\";\nimport { useCachedData } from \"../../utils\";\nimport { useAssetI18n } from \"../../utils/i18n\";\n\nexport const ContentTrans: React.FC<{\n  mode: ContentTransModeType;\n  contentKey: string;\n  original: string;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({\n  mode,\n  contentKey,\n  original,\n  originalProps,\n  translatedProps,\n  assetTOptions,\n}) => {\n  const { assetT } = useAssetI18n();\n  switch (mode) {\n    case \"original\":\n      return <Typography {...originalProps}>{original}</Typography>;\n    case \"translated\":\n      return (\n        <Typography {...translatedProps} color=\"textPrimary\">\n          {assetT(contentKey, original, assetTOptions)}\n        </Typography>\n      );\n    case \"both\":\n      return (\n        <Grid container direction=\"column\">\n          <Typography {...originalProps} color=\"textPrimary\">\n            {original}\n          </Typography>\n          <Typography {...translatedProps} color=\"textSecondary\">\n            {assetT(contentKey, original, assetTOptions)}\n          </Typography>\n        </Grid>\n      );\n  }\n};\n\nexport const CharaNameTrans: React.FC<{\n  mode: ContentTransModeType;\n  characterId: number;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({ mode, characterId, originalProps, translatedProps, assetTOptions }) => {\n  const [charas] = useCachedData<IGameChara>(\"gameCharacters\");\n  const { assetT, assetI18n } = useAssetI18n();\n\n  const [chara, setChara] = useState<IGameChara>();\n\n  useEffect(() => {\n    if (charas.length) {\n      setChara(charas.find((c) => c.id === characterId));\n    }\n  }, [charas, characterId]);\n\n  if (chara) {\n    switch (mode) {\n      case \"original\":\n        return (\n          <Typography {...originalProps} color=\"textPrimary\">\n            {chara.firstName} {chara.givenName}\n          </Typography>\n        );\n      case \"translated\":\n        return [\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language) ? (\n          <Typography {...translatedProps} color=\"textPrimary\">\n            {chara.firstName\n              ? assetT(\n                  `character_name:${characterId}.firstName`,\n                  chara.firstName,\n                  assetTOptions\n                )\n              : \"\"}{\" \"}\n            {assetT(\n              `character_name:${characterId}.givenName`,\n              chara.givenName,\n              assetTOptions\n            )}\n          </Typography>\n        ) : (\n          <Typography>\n            {assetT(\n              `character_name:${characterId}.givenName`,\n              chara.givenName,\n              assetTOptions\n            )}{\" \"}\n            {chara.firstName\n              ? assetT(\n                  `character_name:${characterId}.firstName`,\n                  chara.firstName,\n                  assetTOptions\n                )\n              : \"\"}\n          </Typography>\n        );\n      case \"both\":\n        return (\n          <Grid container direction=\"column\">\n            <Typography {...originalProps}>\n              {chara.firstName} {chara.givenName}\n            </Typography>\n            {[\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language) ? (\n              <Typography color=\"textSecondary\" {...translatedProps}>\n                {chara.firstName\n                  ? assetT(\n                      `character_name:${characterId}.firstName`,\n                      chara.firstName,\n                      assetTOptions\n                    )\n                  : \"\"}{\" \"}\n                {assetT(\n                  `character_name:${characterId}.givenName`,\n                  chara.givenName,\n                  assetTOptions\n                )}\n              </Typography>\n            ) : (\n              <Typography color=\"textSecondary\" {...translatedProps}>\n                {assetT(\n                  `character_name:${characterId}.givenName`,\n                  chara.givenName,\n                  assetTOptions\n                )}{\" \"}\n                {chara.firstName\n                  ? assetT(\n                      `character_name:${characterId}.firstName`,\n                      chara.firstName,\n                      assetTOptions\n                    )\n                  : \"\"}\n              </Typography>\n            )}\n          </Grid>\n        );\n    }\n  } else {\n    return <Typography></Typography>;\n  }\n};\n\nexport const ReleaseCondTrans: React.FC<{\n  mode: ContentTransModeType;\n  releaseCondId: number;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({\n  mode,\n  releaseCondId,\n  originalProps,\n  translatedProps,\n  assetTOptions,\n}) => {\n  const [releaseConds] = useCachedData<IReleaseCondition>(\"releaseConditions\");\n\n  const [releaseCond, setReleaseCond] = useState<IReleaseCondition>();\n\n  useEffect(() => {\n    if (releaseConds.length) {\n      setReleaseCond(releaseConds.find((rc) => rc.id === releaseCondId));\n    }\n  }, [releaseCondId, releaseConds]);\n\n  if (releaseCond) {\n    let i18nKey = \"\";\n    switch (releaseCond.releaseConditionType) {\n      case \"none\":\n        i18nKey = `release_cond:none_${releaseCond.id}`;\n        break;\n      case \"card_level\":\n        i18nKey = `release_cond:card_level`;\n        assetTOptions = Object.assign({}, assetTOptions, {\n          level: releaseCond.releaseConditionTypeLevel,\n        });\n        break;\n      case \"unit_rank\":\n        i18nKey = `release_cond:unit_rank_${releaseCond.releaseConditionTypeId}`;\n        assetTOptions = Object.assign({}, assetTOptions, {\n          rank: releaseCond.releaseConditionTypeLevel,\n        });\n        break;\n      case \"event_point\":\n        i18nKey = `release_cond:event_point`;\n        assetTOptions = Object.assign({}, assetTOptions, {\n          point: releaseCond.releaseConditionTypeQuantity,\n        });\n        break;\n      default:\n        i18nKey = `release_cond:${releaseCond.releaseConditionType}`;\n        break;\n    }\n    return (\n      <ContentTrans\n        mode={mode}\n        contentKey={i18nKey}\n        original={releaseCond.sentence}\n        originalProps={originalProps}\n        translatedProps={translatedProps}\n        assetTOptions={assetTOptions}\n      />\n    );\n  } else {\n    return <div></div>;\n  }\n};\n","export type ContentTransModeType = \"original\" | \"translated\" | \"both\";\nexport type DisplayModeType = \"dark\" | \"light\" | \"auto\";\n\nexport interface GachaDetail {\n  id: number;\n  gachaId: number;\n  cardId: number;\n  weight: number;\n}\n\nexport interface GachaBehavior {\n  id: number;\n  gachaId: number;\n  gachaBehaviorType: string;\n  costResourceType: string;\n  costResourceQuantity: number;\n  spinCount: number;\n  spinLimit: number;\n}\n\nexport interface GachaPickup {\n  id: number;\n  gachaId: number;\n  cardId: number;\n  gachaPickupType: string;\n}\n\nexport interface GachaInformation {\n  gachaId: number;\n  summary: string;\n  description: string;\n}\n\nexport interface IGachaInfo {\n  id: number;\n  gachaType: string;\n  name: string;\n  seq: number;\n  assetbundleName: string;\n  rarity1Rate: number;\n  rarity2Rate: number;\n  rarity3Rate: number;\n  rarity4Rate: number;\n  startAt: number;\n  endAt: number;\n  gachaDetails: GachaDetail[];\n  gachaBehaviors: GachaBehavior[];\n  gachaPickups: GachaPickup[];\n  gachaPickupCostumes: any[];\n  gachaInformation: GachaInformation;\n}\n\nexport interface Cost {\n  resourceId: number;\n  resourceType: string;\n  resourceLevel?: number;\n  quantity: number;\n}\n\nexport interface ICardInfo {\n  id: number;\n  seq: number;\n  characterId: number;\n  rarity: number;\n  specialTrainingPower1BonusFixed: number;\n  specialTrainingPower2BonusFixed: number;\n  specialTrainingPower3BonusFixed: number;\n  attr: string;\n  supportUnit: string;\n  skillId: number;\n  cardSkillName: string;\n  prefix: string;\n  assetbundleName: string;\n  gachaPhrase: string;\n  flavorText: string;\n  releaseAt: number;\n  cardParameters: {\n    id: number;\n    cardId: number;\n    cardLevel: number;\n    cardParameterType: string;\n    power: number;\n  }[];\n  specialTrainingCosts: {\n    cardId: number;\n    seq: number;\n    cost: Cost;\n  }[];\n  masterLessonAchieveResources: {\n    releaseConditionId: number;\n    cardId: number;\n    masterRank: number;\n    resources: {}[];\n  }[];\n}\n\nexport interface IGameChara {\n  id: number;\n  seq: number;\n  resourceId: number;\n  firstName: string;\n  givenName: string;\n  firstNameRuby: string;\n  givenNameRuby: string;\n  gender: string;\n  height: number;\n  live2dHeightAdjustment: number;\n  figure: string;\n  breastSize: string;\n  modelName: string;\n  unit: string;\n  supportUnitType: string;\n}\n\nexport interface GachaStatistic {\n  total: number;\n  rarity1: number;\n  rarity2: number;\n  rarity3: number;\n  rarity4: number;\n}\n\nexport interface IMusicInfo {\n  id: number;\n  seq: number;\n  releaseConditionId: number;\n  categories: string[];\n  title: string;\n  lyricist: string;\n  composer: string;\n  arranger: string;\n  dancerCount: number;\n  selfDancerPosition: number;\n  assetbundleName: string;\n  liveTalkBackgroundAssetbundleName: string;\n  publishedAt: number;\n  liveStageId: number;\n  fillerSec: number;\n}\n\nexport interface IMusicAchievement {\n  id: number;\n  musicAchievementType: string;\n  musicAchievementTypeValue: string;\n  resourceBoxId: number;\n  musicDifficultyType: string;\n}\n\nexport interface SkillEffectDetail {\n  id: number;\n  level: number;\n  activateEffectDuration: number;\n  activateEffectValueType: string;\n  activateEffectValue: number;\n}\n\nexport interface SkillEffect {\n  id: number;\n  skillEffectType: string;\n  activateNotesJudgmentType: string;\n  skillEffectDetails: SkillEffectDetail[];\n}\n\nexport interface ISkillInfo {\n  id: number;\n  shortDescription: string;\n  description: string;\n  descriptionSpriteName: string;\n  skillEffects: SkillEffect[];\n}\n\nexport interface ICardRarity {\n  rarity: number;\n  maxLevel: number;\n  maxSkillLevel: number;\n  trainingMaxLevel?: number;\n}\n\nexport interface CharacterRankAchieveResource {\n  releaseConditionId: number;\n  characterId: number;\n  characterRank: number;\n  resources: any[];\n}\n\nexport interface ICharacterRank {\n  id: number;\n  characterId: number;\n  characterRank: number;\n  power1BonusRate: number;\n  power2BonusRate: number;\n  power3BonusRate: number;\n  rewardResourceBoxIds: number[];\n  characterRankAchieveResources: CharacterRankAchieveResource[];\n}\n\nexport interface Character {\n  id: number;\n  musicId: number;\n  musicVocalId: number;\n  characterType: string;\n  characterId: number;\n  seq: number;\n}\n\nexport interface IMusicVocalInfo {\n  id: number;\n  musicId: number;\n  musicVocalType: string;\n  seq: number;\n  releaseConditionId: number;\n  caption: string;\n  characters: Character[];\n  assetbundleName: string;\n}\n\nexport interface IOutCharaProfile {\n  id: number;\n  seq: number;\n  name: string;\n}\n\nexport interface IUserInformationInfo {\n  id: number;\n  seq: number;\n  informationType: string;\n  informationTag: string;\n  browseType: string;\n  platform: string;\n  title: string;\n  path: string;\n  startAt: number;\n  endAt: number;\n}\n\nexport interface IMusicDifficultyInfo {\n  id: number;\n  musicId: number;\n  musicDifficulty: string;\n  playLevel: number;\n  releaseConditionId: number;\n  noteCount: number;\n}\n\nexport interface IMusicTagInfo {\n  id: number;\n  musicId: number;\n  musicTag: string;\n  seq: number;\n}\n\nexport interface IReleaseCondition {\n  id: number;\n  sentence: string;\n  releaseConditionType: string;\n  releaseConditionTypeId?: number;\n  releaseConditionTypeLevel?: number;\n  releaseConditionTypeQuantity?: number;\n}\n\nexport interface IMusicDanceMembers {\n  id: number;\n  musicId: number;\n  defaultMusicType: string;\n  characterId1: number;\n  unit1: string;\n  characterId2?: number;\n  unit2: string;\n  characterId3?: number;\n  unit3: string;\n  characterId4?: number;\n  unit4: string;\n  characterId5?: number;\n  unit5: string;\n}\n\nexport interface EventRankingReward {\n  id: number;\n  eventRankingRewardRangeId: number;\n  resourceBoxId: number;\n}\n\nexport interface EventRankingRewardRange {\n  id: number;\n  eventId: number;\n  fromRank: number;\n  toRank: number;\n  eventRankingRewards: EventRankingReward[];\n}\n\nexport interface IEventInfo {\n  id: number;\n  eventType: string;\n  name: string;\n  assetbundleName: string;\n  bgmAssetbundleName: string;\n  startAt: number;\n  aggregateAt: number;\n  rankingAnnounceAt: number;\n  distributionStartAt: number;\n  closedAt: number;\n  distributionEndAt: number;\n  virtualLiveId: number;\n  eventRankingRewardRanges: EventRankingRewardRange[];\n}\n\nexport interface IEventDeckBonus {\n  id: number;\n  eventId: number;\n  gameCharacterUnitId: number;\n  cardAttr: string;\n  bonusRate: number;\n}\n\nexport interface IGameCharaUnit {\n  id: number;\n  gameCharacterId: number;\n  unit: string;\n  colorCode: string;\n  skinColorCode: string;\n  skinShadowColorCode1: string;\n  skinShadowColorCode2: string;\n}\n\nexport interface UserCard {\n  cardId: number;\n  level: number;\n  masterRank: number;\n  specialTrainingStatus: string;\n  defaultImage: string;\n}\n\nexport interface UserProfile {\n  userId: any;\n  word: string;\n  honorId1?: number;\n  honorLevel1?: number;\n  honorId2?: number;\n  honorLevel2?: number;\n  honorId3?: number;\n  honorLevel3?: number;\n  twitterId: string;\n  profileImageType: string;\n  userVirtualLiveTop10Rankings: any[];\n}\n\nexport interface UserRanking {\n  userId: any;\n  score: number;\n  rank: number;\n  isOwn: boolean;\n  name: string;\n  userCard: UserCard;\n  userProfile: UserProfile;\n}\n\nexport interface IEventRealtimeRank {\n  time: number;\n  first10: UserRanking[];\n  rank20: UserRanking[];\n  rank30: UserRanking[];\n  rank40: UserRanking[];\n  rank50: UserRanking[];\n  rank100: UserRanking[];\n  rank200: UserRanking[];\n  rank300: UserRanking[];\n  rank400: UserRanking[];\n  rank500: UserRanking[];\n  rank1000: UserRanking[];\n  rank2000: UserRanking[];\n  rank3000: UserRanking[];\n  rank4000: UserRanking[];\n  rank5000: UserRanking[];\n  rank10000: UserRanking[];\n  rank20000: UserRanking[];\n  rank30000: UserRanking[];\n  rank40000: UserRanking[];\n  rank50000: UserRanking[];\n  rank100000: UserRanking[];\n}\n\nexport interface ResourceBoxDetail {\n  resourceBoxPurpose: string;\n  resourceBoxId: number;\n  seq: number;\n  resourceType: string;\n  resourceQuantity: number;\n  resourceId?: number;\n  resourceLevel?: number;\n}\n\nexport interface IResourceBoxInfo {\n  resourceBoxPurpose: string;\n  id: number;\n  resourceBoxType: string;\n  details: ResourceBoxDetail[];\n  description: string;\n  name: string;\n  assetbundleName: string;\n}\n\nexport interface HonorLevel {\n  honorId: number;\n  level: number;\n  bonus: number;\n  description: string;\n}\n\nexport interface IHonorInfo {\n  id: number;\n  seq: number;\n  groupId: number;\n  honorRarity: string;\n  name: string;\n  assetbundleName: string;\n  levels: HonorLevel[];\n}\n\nexport interface ICardEpisode {\n  id: number;\n  seq: number;\n  cardId: number;\n  title: string;\n  scenarioId: string;\n  assetbundleName: string;\n  releaseConditionId: number;\n  power1BonusFixed: number;\n  power2BonusFixed: number;\n  power3BonusFixed: number;\n  rewardResourceBoxIds: number[];\n  costs: Cost[];\n  cardEpisodePartType: string;\n}\n\nexport interface IStampInfo {\n  id: number;\n  stampType: string;\n  seq: number;\n  name: string;\n  assetbundleName: string;\n  balloonAssetbundleName: string;\n  characterId1: number;\n}\n\nexport interface ITipInfoComic {\n  id: number;\n  title: string;\n  fromUserRank: number;\n  toUserRank: number;\n  assetbundleName: string;\n}\n\nexport interface ITipInfoText {\n  id: number;\n  title: string;\n  fromUserRank: number;\n  toUserRank: number;\n  description: string;\n}\n\nexport type ITipInfo = ITipInfoText | ITipInfoComic;\n\nexport interface ICharaUnitInfo {\n  id: number;\n  gameCharacterId: number;\n  unit: string;\n  colorCode: string;\n  skinColorCode: string;\n  skinShadowColorCode1: string;\n  skinShadowColorCode2: string;\n}\n\nexport interface ICharaProfile {\n  characterId: number;\n  characterVoice: string;\n  birthday: string;\n  height: string;\n  school: string;\n  schoolYear: string;\n  hobby: string;\n  specialSkill: string;\n  favoriteFood: string;\n  hatedFood: string;\n  weak: string;\n  introduction: string;\n  scenarioId: string;\n}\n\nexport interface IUnitProfile {\n  unit: string;\n  unitName: string;\n  seq: number;\n  profileSentence: string;\n  colorCode: string;\n}\n\nexport interface ITeamCardState {\n  cardId: number;\n  level: number;\n  skillLevel: number;\n}\n\nexport interface ITeamBuild {\n  teamCards: number[];\n  teamCardsStates: ITeamCardState[];\n  teamPowerStates: number;\n}\n\nexport interface IMusicMeta {\n  music_id: number;\n  difficulty: string;\n  level: number;\n  combo: number;\n  music_time: number;\n  event_rate: number;\n  base_score: number;\n  skill_score_solo: number[];\n  skill_score_multi: number[];\n  fever_score: number;\n}\n\nexport interface IMusicRecommendResult {\n  id: number;\n  name: string;\n  difficulty: string;\n  level: number;\n  combo: number;\n  result: number;\n  link: string;\n}\n\nexport interface IUnitStoryEpisode {\n  id: number;\n  unit: string;\n  chapterNo: number;\n  episodeNo: number;\n  unitEpisodeCategory: string;\n  episodeNoLabel: string;\n  title: string;\n  assetbundleName: string;\n  scenarioId: string;\n  releaseConditionId: number;\n  rewardResourceBoxIds: number[];\n  andReleaseConditionId?: number;\n}\n\nexport interface IUnitStoryChapter {\n  id: number;\n  unit: string;\n  chapterNo: number;\n  title: string;\n  assetbundleName: string;\n  episodes: IUnitStoryEpisode[];\n}\n\nexport interface IUnitStory {\n  unit: string;\n  seq: number;\n  assetbundleName: string;\n  chapters: IUnitStoryChapter[];\n}\n\nexport interface AppearCharacter {\n  Character2dId: number;\n  CostumeType: string;\n}\n\nexport enum SnippetAction {\n  None = 0,\n  Talk = 1,\n  CharacerLayout = 2,\n  InputName = 3,\n  CharacterMotion = 4,\n  Selectable = 5,\n  SpecialEffect = 6,\n  Sound = 7,\n}\n\nexport enum SnippetProgressBehavior {\n  Now = 0,\n  WaitUnitilFinished = 1,\n}\n\nexport interface Snippet {\n  Action: SnippetAction;\n  ProgressBehavior: SnippetProgressBehavior;\n  ReferenceIndex: number;\n  Delay: number;\n}\n\nexport interface TalkCharacter {\n  Character2dId: number;\n}\n\nexport interface Motion {\n  Character2dId: number;\n  MotionName: string;\n  FacialName: string;\n  TimingSyncValue: number;\n}\n\nexport interface Voice {\n  Character2dId: number;\n  VoiceId: string;\n  Volume: number;\n}\n\nexport interface TalkData {\n  TalkCharacters: TalkCharacter[];\n  WindowDisplayName: string;\n  Body: string;\n  TalkTention: number;\n  LipSync: number;\n  MotionChangeFrom: number;\n  Motions: Motion[];\n  Voices: Voice[];\n  Speed: number;\n  FontSize: number;\n  WhenFinishCloseWindow: number;\n  RequirePlayEffect: number;\n  EffectReferenceIdx: number;\n  RequirePlaySound: number;\n  SoundReferenceIdx: number;\n}\n\nexport interface LayoutData {\n  Type: number;\n  SideFrom: number;\n  SideFromOffsetX: number;\n  SideTo: number;\n  SideToOffsetX: number;\n  DepthType: number;\n  Character2dId: number;\n  CostumeType: string;\n  MotionName: string;\n  FacialName: string;\n  MoveSpeedType: number;\n}\n\nexport enum SpecialEffectType {\n  None = 0,\n  BlackIn = 1,\n  BlackOut = 2,\n  WhiteIn = 3,\n  WhiteOut = 4,\n  ShakeScreen = 5,\n  ShakeWindow = 6,\n  ChangeBackground = 7,\n  Telop = 8,\n  FlashbackIn = 9,\n  FlashbackOut = 10,\n  ChangeCardStill = 11,\n  AmbientColorNormal = 12,\n  AmbientColorEvening = 13,\n  AmbientColorNight = 14,\n  PlayScenarioEffect = 15,\n  StopScenarioEffect = 16,\n  ChangeBackgroundStill = 17,\n  PlaceInfo = 18,\n  Movie = 19,\n  SekaiIn = 20,\n  SekaiOut = 21,\n  AttachCharacterShader = 22,\n  SimpleSelectable = 23,\n  FullScreenText = 24,\n  StopShakeScreen = 25,\n  StopShakeWindow = 26,\n}\n\nexport interface SpecialEffectData {\n  EffectType: SpecialEffectType;\n  StringVal: string;\n  StringValSub: string;\n  Duration: number;\n  IntVal: number;\n}\n\nexport enum SoundPlayMode {\n  CrossFade = 0,\n  Stack = 1,\n  SpecialSePlay = 2,\n  Stop = 3,\n}\n\nexport interface SoundData {\n  PlayMode: SoundPlayMode;\n  Bgm: string;\n  Se: string;\n  Volume: number;\n  SeBundleName: string;\n  Duration: number;\n}\n\nexport interface IScenarioData {\n  ScenarioId: string;\n  AppearCharacters: AppearCharacter[];\n  FirstLayout: any[];\n  FirstBgm: string;\n  FirstBackground: string;\n  Snippets: Snippet[];\n  TalkData: TalkData[];\n  LayoutData: LayoutData[];\n  SpecialEffectData: SpecialEffectData[];\n  SoundData: SoundData[];\n  NeedBundleNames: string[];\n  IncludeSoundDataBundleNames: any[];\n}\n\nexport interface IEpisodeCharacter {\n  id: number;\n  seq: number;\n  character2dId: number;\n  storyType: string;\n  episodeId: number;\n}\n\nexport interface ICharacter2D {\n  id: number;\n  characterType: \"game_character\" | \"mob\";\n  characterId: number;\n  unit: string;\n  assetName: string;\n}\n\nexport interface IMobCharacter {\n  id: number;\n  seq: number;\n  name: string;\n  gender: string;\n}\n\nexport interface EventStoryEpisodeReward {\n  resourceBoxId: number;\n}\n\nexport interface EventStoryEpisode {\n  id: number;\n  eventStoryId: number;\n  episodeNo: number;\n  title: string;\n  assetbundleName: string;\n  scenarioId: string;\n  releaseConditionId: number;\n  episodeRewards: EventStoryEpisodeReward[];\n}\n\nexport interface IEventStory {\n  id: number;\n  eventId: number;\n  assetbundleName: string;\n  eventStoryEpisodes: EventStoryEpisode[];\n}\n\nexport interface MissionReward {\n  id: number;\n  missionType: string;\n  missionId: number;\n  seq: number;\n  resourceBoxId: number;\n}\n\nexport interface IHonorMission {\n  id: number;\n  seq: number;\n  honorMissionType: string;\n  requirement: number;\n  sentence: string;\n  rewards: MissionReward[];\n}\n\nexport interface INormalMission {\n  id: number;\n  seq: number;\n  normalMissionType: string;\n  requirement: number;\n  sentence: string;\n  rewards: MissionReward[];\n}\n\nexport interface IBeginnerMission {\n  id: number;\n  seq: number;\n  beginnerMissionType: string;\n  beginnerMissionCategory: string;\n  requirement: number;\n  sentence: string;\n  rewards: MissionReward[];\n}\n\nexport interface IHonorGroup {\n  id: number;\n  honorType: string;\n  name: string;\n}\n\nexport enum CharacterMissionType {\n  PLAY_LIVE = \"play_live\",\n  // COLLECT_CARD = \"collect_card\",\n  WAITING_ROOM = \"waiting_room\",\n  COLLECT_COSTUME_3D = \"collect_costume_3d\",\n  // LIVE_CLEAR = \"live_clear\",\n  COLLECT_STAMP = \"collect_stamp\",\n  READ_AREA_TALK = \"read_area_talk\",\n  // SKILL_EXP = \"skill_exp\",\n  MASTER_RANK = \"master_rank\",\n  // READ_EPISODE = \"read_episode\",\n  READ_CARD_EPISODE_FIRST = \"read_card_episode_first\",\n  READ_CARD_EPISODE_SECOND = \"read_card_episode_second\",\n}\n\nexport interface ICharacterMission {\n  id: number;\n  seq: number;\n  characterId: number;\n  characterMissionType: CharacterMissionType;\n  requirement: number;\n  sentence: string;\n}\n\nexport interface UserGamedata {\n  userId: number;\n  name: string;\n  deck: number;\n  rank: number;\n}\n\nexport interface User {\n  userGamedata: UserGamedata;\n}\n\nexport interface UserProfile {\n  userId: number;\n  word: string;\n  honorId1: number;\n  honorLevel1: number;\n  honorId2: number;\n  honorLevel2: number;\n  honorId3: number;\n  honorLevel3: number;\n  twitterId: string;\n  profileImageType: string;\n}\n\nexport interface UserDeck {\n  leader: number;\n  member1: number;\n  member2: number;\n  member3: number;\n  member4: number;\n  member5: number;\n}\n\nexport interface UserCardEpisode {\n  cardEpisodeId: number;\n  scenarioStatus: string;\n  scenarioStatusReasons: string[];\n  isNotSkipped: boolean;\n}\n\nexport interface UserCard {\n  cardId: number;\n  level: number;\n  masterRank: number;\n  specialTrainingStatus: string;\n  defaultImage: string;\n  episodes: UserCardEpisode[];\n}\n\nexport interface UserMusicResult {\n  userId: number;\n  musicId: number;\n  musicDifficulty: string;\n  playType: string;\n  playResult: string;\n  highScore: number;\n  fullComboFlg: boolean;\n  fullPerfectFlg: boolean;\n  mvpCount: number;\n  superStarCount: number;\n  createdAt: number;\n  updatedAt: number;\n}\n\nexport interface UserMusicDifficultyStatus {\n  musicId: number;\n  musicDifficulty: string;\n  musicDifficultyStatus: string;\n  userMusicResults: UserMusicResult[];\n}\n\nexport interface UserMusic {\n  userId: number;\n  musicId: number;\n  userMusicDifficultyStatuses: UserMusicDifficultyStatus[];\n}\n\nexport interface UserCharacter {\n  characterId: number;\n  characterRank: number;\n}\n\nexport interface UserChallengeLiveSoloResult {\n  characterId: number;\n  highScore: number;\n}\n\nexport interface UserChallengeLiveSoloStage {\n  challengeLiveStageType: string;\n  characterId: number;\n  challengeLiveStageId: number;\n  rank: number;\n}\n\nexport interface UserAreaItem {\n  areaItemId: number;\n  level: number;\n}\n\nexport interface UserHonor {\n  userId: number;\n  honorId: number;\n  level: number;\n  obtainedAt: number;\n}\n\nexport interface IUserProfile {\n  user: User;\n  userProfile: UserProfile;\n  userDecks: UserDeck[];\n  userCards: UserCard[];\n  userMusics: UserMusic[];\n  userCharacters: UserCharacter[];\n  userChallengeLiveSoloResults: UserChallengeLiveSoloResult[];\n  userChallengeLiveSoloStages: UserChallengeLiveSoloStage[];\n  userAreaItems: UserAreaItem[];\n  userHonors: UserHonor[];\n}\n\nexport type EventGraphRanking =\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 20\n  | 30\n  | 40\n  | 50\n  | 100\n  | 200\n  | 300\n  | 400\n  | 500\n  | 1000\n  | 2000\n  | 3000\n  | 4000\n  | 5000\n  | 10000\n  | 20000\n  | 30000\n  | 40000\n  | 50000\n  | 100000;\nexport interface EventRankingResponse {\n  id: number;\n  eventId: number;\n  timestamp: string;\n  rank: number;\n  score: number;\n  userId: string;\n  userName: string;\n  userCard?: UserCard;\n  userProfile?: UserProfile;\n}\n\nexport interface IEventCard {\n  id: number;\n  cardId: number;\n  eventId: number;\n}\n","import {\n  // Box,\n  Grid,\n  // makeStyles,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\n\n// only divisor of 12\ntype GridSize = 1 | 2 | 3 | 4 | 6 | 12 | undefined;\n\ninterface GridSizeOptions {\n  /**\n   * grid size for `xs` and wider (if not overridden) \\\n   * omit this property or set `undefined` to use default (12)\n   */\n  xs?: GridSize;\n  /**\n   * grid size for `sm` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `xs` \\\n   */\n  sm?: GridSize;\n  /**\n   * grid size for `md` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `sm` \\\n   */\n  md?: GridSize;\n  /**\n   * grid size for `lg` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `md` \\\n   */\n  lg?: GridSize;\n  /**\n   * grid size for `xl` and wider \\\n   * omit this property or set `undefined` to inherit from `lg` \\\n   */\n  xl?: GridSize;\n}\n\ntype CompleteGridSizeOptions = {\n  [T in keyof Required<GridSizeOptions>]: Exclude<GridSize, undefined>;\n};\n\ninterface IISProps<T> {\n  readonly ViewComponent: React.FC<\n    { data?: T; index?: number } & { [key: string]: any }\n  >;\n  readonly callback: (\n    entries: readonly IntersectionObserverEntry[],\n    setHasMore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => void;\n  readonly data: readonly T[];\n  readonly gridSize?: Readonly<GridSizeOptions>;\n  readonly viewProps?: { [key: string]: any };\n  readonly onComponentClick?: (data: T) => void;\n}\n\n// NOTE: `breakpoints` must be sorted ascending by size\nconst breakpoints = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"] as const;\n\nconst defaultXSGridSize: GridSize = 12;\nconst defaultGridSize: Readonly<GridSizeOptions> = {\n  xs: defaultXSGridSize,\n  md: 4,\n};\n\nfunction useBreakpoint(): keyof GridSizeOptions {\n  const theme = useTheme();\n\n  // NOTE: The number of calls to `useMediaQuery` must always be constant.\n  // https://en.reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level\n  const downBreakpoints = breakpoints.map(\n    (breakpoint) =>\n      // NOTE: `down` includes itself\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useMediaQuery(theme.breakpoints.down(breakpoint)) && breakpoint\n  );\n\n  // NOTE: `down('xl')` always returns `true` so `|| breakpoints[breakpoints.length - 1]`\n  //       is not actually needed, but it's written for clarity and typing.\n  return downBreakpoints.find(Boolean) || breakpoints[breakpoints.length - 1];\n}\n\nfunction transformToCompleteGridSizeOptions(\n  _gridSize?: Readonly<GridSizeOptions> | undefined\n): CompleteGridSizeOptions {\n  // use default if gridSize is not provided\n  // not using defaults per properties because `{ md: 4 }` would not be desired\n  const gridSize = {\n    ...(_gridSize || defaultGridSize),\n  };\n\n  // inherit the value of the smaller breakpoint if not specified\n  breakpoints.forEach((v, i, a) => {\n    if (!gridSize[v]) {\n      gridSize[v] = i > 0 ? gridSize[a[i - 1]] : defaultXSGridSize;\n    }\n  });\n\n  return gridSize as CompleteGridSizeOptions;\n}\n\nfunction InfiniteScroll<T>({\n  ViewComponent,\n  callback,\n  data,\n  gridSize: _gridSize,\n  viewProps,\n  onComponentClick,\n}: React.PropsWithChildren<IISProps<T & { id: number }>>): React.ReactElement<\n  IISProps<T>\n> {\n  // this is necessary because of `viewGridSize`\n  const gridSize = transformToCompleteGridSizeOptions(_gridSize);\n\n  const breakpoint = useBreakpoint();\n\n  const [hasMore, setHasMore] = useState<boolean>(true);\n\n  const observer = useRef(\n    new IntersectionObserver((entries) => callback(entries, setHasMore), {\n      threshold: 0.5,\n    })\n  );\n  const listElementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setHasMore(true);\n  }, [data]);\n\n  useEffect(() => {\n    const currentObserver = observer.current;\n    const currentElement = listElementRef.current;\n    if (currentElement) currentObserver.observe(currentElement);\n\n    return () => {\n      if (currentElement) {\n        currentObserver.unobserve(currentElement);\n      }\n    };\n  });\n\n  const viewGridSize = gridSize[breakpoint];\n  const itemsPerRow = 12 / viewGridSize;\n  const numPlaceholders = data.length ? itemsPerRow : itemsPerRow * 2;\n\n  return (\n    <Fragment>\n      <Grid container direction=\"row\" spacing={1}>\n        {data.length\n          ? data.map((data, i) => (\n              <Grid\n                key={data.id}\n                item\n                xs={gridSize.xs}\n                sm={gridSize.sm}\n                md={gridSize.md}\n                lg={gridSize.lg}\n                xl={gridSize.xl}\n                onClick={() => {\n                  if (onComponentClick) onComponentClick(data);\n                }}\n              >\n                <ViewComponent data={data} index={i} {...viewProps} />\n              </Grid>\n            ))\n          : null}\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        ref={listElementRef}\n        style={{ display: hasMore ? \"flex\" : \"none\", paddingTop: \"4px\" }}\n        spacing={1}\n      >\n        {Array.from({\n          length: numPlaceholders,\n        }).map((_, i) => (\n          <Grid\n            key={`empty-${i}`}\n            item\n            xs={gridSize.xs}\n            sm={gridSize.sm}\n            md={gridSize.md}\n            lg={gridSize.lg}\n            xl={gridSize.xl}\n          >\n            <ViewComponent />\n          </Grid>\n        ))}\n      </Grid>\n    </Fragment>\n  );\n}\n\nexport default InfiniteScroll;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = /*#__PURE__*/React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  }\n};\nvar CardContent = /*#__PURE__*/React.forwardRef(function CardContent(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardContent'\n})(CardContent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport FormLabel from '../FormLabel';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      transformOrigin: 'top left'\n    },\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `error={true}`. */\n    error: {},\n\n    /* Pseudo-class applied to the root element if `required={true}`. */\n    required: {},\n\n    /* Pseudo-class applied to the asterisk element. */\n    asterisk: {},\n\n    /* Styles applied to the root element if the component is a descendant of `FormControl`. */\n    formControl: {\n      position: 'absolute',\n      left: 0,\n      top: 0,\n      // slight alteration to spec spacing to match visual spec result\n      transform: 'translate(0, 24px) scale(1)'\n    },\n\n    /* Styles applied to the root element if `margin=\"dense\"`. */\n    marginDense: {\n      // Compensation for the `Input.inputDense` style.\n      transform: 'translate(0, 21px) scale(1)'\n    },\n\n    /* Styles applied to the `input` element if `shrink={true}`. */\n    shrink: {\n      transform: 'translate(0, 1.5px) scale(0.75)',\n      transformOrigin: 'top left'\n    },\n\n    /* Styles applied to the `input` element if `disableAnimation={false}`. */\n    animated: {\n      transition: theme.transitions.create(['color', 'transform'], {\n        duration: theme.transitions.duration.shorter,\n        easing: theme.transitions.easing.easeOut\n      })\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"`. */\n    filled: {\n      // Chrome's autofill feature gives the input field a yellow background.\n      // Since the input field is behind the label in the HTML tree,\n      // the input field is drawn last and hides the label with an opaque background color.\n      // zIndex: 1 will raise the label above opaque background-colors of input.\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(12px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(12px, 17px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(12px, 10px) scale(0.75)',\n        '&$marginDense': {\n          transform: 'translate(12px, 7px) scale(0.75)'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      // see comment above on filled.zIndex\n      zIndex: 1,\n      pointerEvents: 'none',\n      transform: 'translate(14px, 20px) scale(1)',\n      '&$marginDense': {\n        transform: 'translate(14px, 12px) scale(1)'\n      },\n      '&$shrink': {\n        transform: 'translate(14px, -6px) scale(0.75)'\n      }\n    }\n  };\n};\nvar InputLabel = /*#__PURE__*/React.forwardRef(function InputLabel(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$disableAnimati = props.disableAnimation,\n      disableAnimation = _props$disableAnimati === void 0 ? false : _props$disableAnimati,\n      margin = props.margin,\n      shrinkProp = props.shrink,\n      variant = props.variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"disableAnimation\", \"margin\", \"shrink\", \"variant\"]);\n\n  var muiFormControl = useFormControl();\n  var shrink = shrinkProp;\n\n  if (typeof shrink === 'undefined' && muiFormControl) {\n    shrink = muiFormControl.filled || muiFormControl.focused || muiFormControl.adornedStart;\n  }\n\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['margin', 'variant']\n  });\n  return /*#__PURE__*/React.createElement(FormLabel, _extends({\n    \"data-shrink\": shrink,\n    className: clsx(classes.root, className, muiFormControl && classes.formControl, !disableAnimation && classes.animated, shrink && classes.shrink, fcs.margin === 'dense' && classes.marginDense, {\n      'filled': classes.filled,\n      'outlined': classes.outlined\n    }[fcs.variant]),\n    classes: {\n      focused: classes.focused,\n      disabled: classes.disabled,\n      error: classes.error,\n      required: classes.required,\n      asterisk: classes.asterisk\n    },\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? InputLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The contents of the `InputLabel`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * If `true`, the transition animation is disabled.\n   */\n  disableAnimation: PropTypes.bool,\n\n  /**\n   * If `true`, apply disabled class.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `dense`, will adjust vertical spacing. This is normally obtained via context from\n   * FormControl.\n   */\n  margin: PropTypes.oneOf(['dense']),\n\n  /**\n   * if `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * If `true`, the label is shrunk.\n   */\n  shrink: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiInputLabel'\n})(InputLabel);","import {\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport React, { Fragment, useContext } from \"react\";\nimport { SettingContext } from \"../../../context\";\nimport { ICharacterMission } from \"../../../types\";\nimport { ContentTrans } from \"../../subs/ContentTrans\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    paddingTop: \"5%\",\n    backgroundSize: \"contain\",\n  },\n  card: {\n    cursor: \"pointer\",\n  },\n  header: {},\n  \"grid-out\": {\n    padding: theme.spacing(\"1%\", \"2%\"),\n  },\n}));\n\nconst GridView: React.FC<{ data?: ICharacterMission }> = ({ data }) => {\n  const classes = useStyles();\n  const { contentTransMode } = useContext(SettingContext)!;\n\n  if (!data) {\n    // loading\n    return (\n      <Card className={classes.card}>\n        {/* <Skeleton variant=\"rect\" className={classes.media}></Skeleton> */}\n        <CardContent>\n          <Typography variant=\"subtitle1\" className={classes.header}>\n            <Skeleton variant=\"text\" width=\"90%\"></Skeleton>\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n  return (\n    <Fragment>\n      <Card className={classes.card}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs={12}>\n            <CardContent style={{ paddingBottom: \"16px\" }}>\n              <Grid container direction=\"column\" spacing={1}>\n                <Grid item>\n                  <ContentTrans\n                    mode={contentTransMode}\n                    contentKey={`normal_mission:${data.id}`}\n                    original={data.sentence}\n                    originalProps={{\n                      variant: \"subtitle1\",\n                      className: classes.header,\n                    }}\n                  />\n                </Grid>\n              </Grid>\n            </CardContent>\n          </Grid>\n        </Grid>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default GridView;\n","import {\n  Container,\n  FormControl,\n  Grid,\n  InputLabel,\n  Select,\n  Typography,\n  MenuItem,\n} from \"@material-ui/core\";\nimport React, { useState, useEffect, Fragment, useContext } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { SettingContext } from \"../../../context\";\nimport { useLayoutStyles } from \"../../../styles/layout\";\nimport {\n  CharacterMissionType,\n  ICharacterMission,\n  ICharaProfile,\n} from \"../../../types.d\";\nimport { useCachedData, useRefState } from \"../../../utils\";\nimport { CharaNameTrans } from \"../../subs/ContentTrans\";\nimport InfiniteScroll from \"../../subs/InfiniteScroll\";\nimport GridView from \"./GridView\";\n\ntype ViewGridType = \"grid\" | \"agenda\" | \"comfy\";\n\nconst ListCard: { [key: string]: React.FC<{ data?: ICharacterMission }> } = {\n  grid: GridView,\n};\n\nfunction getPaginatedHonorMissions(\n  events: ICharacterMission[],\n  page: number,\n  limit: number\n) {\n  return events.slice(limit * (page - 1), limit * page);\n}\n\nconst CharacterMissionList: React.FC<{}> = () => {\n  const layoutClasses = useLayoutStyles();\n  const { t } = useTranslation();\n  const { contentTransMode } = useContext(SettingContext)!;\n\n  const [characterMissionsCache] = useCachedData<ICharacterMission>(\n    \"characterMissions\"\n  );\n  const [characterProfiles] = useCachedData<ICharaProfile>(\"characterProfiles\");\n\n  const [characterMissions, setNormalMissions] = useState<ICharacterMission[]>(\n    []\n  );\n  const [charaId, setCharaId] = useState<number>(1);\n  const [missionType, setMissionType] = useState<string>(\"play_live\");\n\n  const [viewGridType] = useState<ViewGridType>(\n    (localStorage.getItem(\"event-list-grid-view-type\") ||\n      \"grid\") as ViewGridType\n  );\n  const [page, pageRef, setPage] = useRefState<number>(1);\n  const [limit, limitRef] = useRefState<number>(12);\n  const [, lastQueryFinRef, setLastQueryFin] = useRefState<boolean>(true);\n  const [, isReadyRef, setIsReady] = useRefState<boolean>(false);\n  const [sortedCache, sortedCacheRef, setSortedCache] = useRefState<\n    ICharacterMission[]\n  >([]);\n\n  useEffect(() => {\n    document.title = t(\"title:characterMissionList\");\n  }, [t]);\n\n  useEffect(() => {\n    if (characterMissionsCache.length) {\n      let result = [...characterMissionsCache];\n      // do filter\n      result = result.filter((c) => c.characterId === charaId);\n      result = result.filter((c) => c.characterMissionType === missionType);\n      setSortedCache(result);\n      setNormalMissions([]);\n      setPage(0);\n    }\n  }, [characterMissionsCache, setPage, setSortedCache, missionType, charaId]);\n\n  useEffect(() => {\n    setNormalMissions((events) => [\n      ...events,\n      ...getPaginatedHonorMissions(sortedCache, page, limit),\n    ]);\n    setLastQueryFin(true);\n  }, [page, limit, setLastQueryFin, sortedCache]);\n\n  useEffect(() => {\n    setIsReady(Boolean(characterMissionsCache.length));\n  }, [setIsReady, characterMissionsCache]);\n\n  const callback = (\n    entries: readonly IntersectionObserverEntry[],\n    setHasMore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => {\n    if (!isReadyRef.current) return;\n    if (\n      entries[0].isIntersecting &&\n      lastQueryFinRef.current &&\n      (!sortedCacheRef.current.length ||\n        sortedCacheRef.current.length > pageRef.current * limitRef.current)\n    ) {\n      setPage((page) => page + 1);\n      setLastQueryFin(false);\n    } else if (\n      sortedCacheRef.current.length &&\n      sortedCacheRef.current.length <= pageRef.current * limitRef.current\n    ) {\n      setHasMore(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Typography variant=\"h6\" className={layoutClasses.header}>\n        {t(\"common:mission.main\")} - {t(\"common:character\")}\n      </Typography>\n      <Container className={layoutClasses.content} maxWidth=\"lg\">\n        <Grid container spacing={1}>\n          {characterProfiles.length ? (\n            <Fragment>\n              <Grid item xs={12} md={3}>\n                <FormControl style={{ width: \"100%\" }}>\n                  <InputLabel id=\"select-chara-name\">\n                    {t(\"mission:select.charaName\")}\n                  </InputLabel>\n                  <Select\n                    labelId=\"select-chara-name\"\n                    value={charaId}\n                    onChange={(e) => {\n                      setCharaId(e.target.value as number);\n                    }}\n                  >\n                    {characterProfiles.map((cp) => (\n                      <MenuItem value={cp.characterId} key={cp.characterId}>\n                        <CharaNameTrans\n                          mode={contentTransMode}\n                          characterId={cp.characterId}\n                        />\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Fragment>\n          ) : null}\n          {Object.values(CharacterMissionType).length ? (\n            <Fragment>\n              <Grid item xs={12} md={3}>\n                <FormControl style={{ width: \"100%\" }}>\n                  <InputLabel id=\"select-chara-name\">\n                    {t(\"mission:type.caption\")}\n                  </InputLabel>\n                  <Select\n                    labelId=\"select-mission-type\"\n                    value={missionType}\n                    onChange={(e) => {\n                      setMissionType(e.target.value as string);\n                    }}\n                  >\n                    {Object.values(CharacterMissionType).map((cmt) => (\n                      <MenuItem value={cmt} key={cmt}>\n                        <Typography>{t(`mission:type.${cmt}`)}</Typography>\n                      </MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Fragment>\n          ) : null}\n        </Grid>\n        <InfiniteScroll<ICharacterMission>\n          ViewComponent={ListCard[viewGridType]}\n          callback={callback}\n          data={characterMissions}\n          gridSize={\n            ({\n              grid: {\n                xs: 12,\n                md: 6,\n              },\n              agenda: {\n                xs: 12,\n              },\n              comfy: {\n                xs: 12,\n              },\n            } as const)[viewGridType]\n          }\n        />\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default CharacterMissionList;\n"],"sourceRoot":""}