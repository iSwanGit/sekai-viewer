{"version":3,"sources":["components/subs/ContentTrans.tsx","styles/interactive.ts","components/subs/InfiniteScroll.tsx","stores/reducers.ts","../node_modules/@material-ui/core/esm/Link/Link.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/icons/esm/Update.js","../node_modules/@material-ui/icons/esm/Publish.js","../node_modules/@material-ui/icons/esm/PublishOutlined.js","../node_modules/@material-ui/icons/esm/GetApp.js","../node_modules/@material-ui/icons/esm/GetAppOutlined.js","components/stamp/GridView.tsx","components/stamp/StampList.tsx"],"names":["ContentTrans","mode","contentKey","original","originalProps","translatedProps","assetTOptions","assetT","useAssetI18n","color","container","direction","CharaNameTrans","characterId","useCachedData","charas","assetI18n","useState","chara","setChara","useEffect","length","find","c","id","firstName","givenName","includes","language","ReleaseCondTrans","releaseCondId","releaseConds","releaseCond","setReleaseCond","rc","i18nKey","releaseConditionType","Object","assign","level","releaseConditionTypeLevel","releaseConditionTypeId","rank","point","releaseConditionTypeQuantity","sentence","useInteractiveStyles","makeStyles","theme","margin","spacing","padding","caption","breakpoints","up","textAlign","sliderContainer","paddingRight","inputHidden","display","noDecoration","textDecoration","palette","text","primary","defaultGridSize","xs","md","InfiniteScroll","ViewComponent","callback","data","_gridSize","gridSize","viewProps","onComponentClick","forEach","v","i","a","transformToCompleteGridSizeOptions","breakpoint","useTheme","map","useMediaQuery","down","Boolean","useBreakpoint","hasMore","setHasMore","observer","useRef","IntersectionObserver","entries","threshold","listElementRef","currentObserver","current","currentElement","observe","unobserve","itemsPerRow","numPlaceholders","key","item","sm","lg","xl","onClick","index","ref","style","paddingTop","Array","from","_","characterSelectReducer","state","action","type","payload","slice","indexOf","Error","attrSelectReducer","missionTypeReducer","teamBuildReducer","teams","localStorage","setItem","JSON","stringify","Link","React","props","classes","className","_props$color","_props$component","component","onBlur","onFocus","TypographyClasses","_props$underline","underline","_props$variant","variant","other","_objectWithoutProperties","_useIsFocusVisible","useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","_React$useState","focusVisible","setFocusVisible","handlerRef","useForkRef","Typography","_extends","clsx","root","concat","capitalize","button","event","withStyles","underlineNone","underlineHover","underlineAlways","position","WebkitTapHighlightColor","backgroundColor","outline","border","borderRadius","cursor","userSelect","verticalAlign","borderStyle","name","createSvgIcon","d","Avatar","alt","childrenProp","children","Component","imgProps","sizes","src","srcSet","loaded","_ref","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","overflow","background","default","grey","circle","rounded","shape","square","objectFit","textIndent","createElement","useStyles","media","marginTop","backgroundSize","card","subheader","GridView","contentTransMode","useContext","SettingContext","url","setUrl","getRemoteAssetURL","assetbundleName","href","target","Card","CardMedia","title","CardContent","paddingBottom","replace","Skeleton","ListCard","StampList","layoutClasses","useLayoutStyles","interactiveClasses","t","useTranslation","getCharaName","useCharaName","stampsCache","stamps","setStamps","useRefState","filteredCache","filteredCacheRef","setFilteredCache","filterOpened","setFilterOpened","getItem","updateSort","setUpdateSort","useReducer","characterSelected","dispatchCharacterSelected","page","pageRef","setPage","limit","limitRef","lastQueryFinRef","setLastQueryFin","isReadyRef","setIsReady","getPaginatedStamps","useCallback","document","cache","filter","s","characterId1","sort","b","handleUpdateSort","header","Container","content","Grid","justify","ButtonGroup","marginBottom","Button","size","Update","Publish","PublishOutlined","GetApp","GetAppOutlined","Sort","SortOutlined","Collapse","in","Paper","idx","Chip","clickable","avatar","charaIcons","label","isIntersecting"],"mappings":"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","file":"static/js/32.a27894e9.chunk.js","sourcesContent":["import { Grid, Typography, TypographyProps } from \"@material-ui/core\";\nimport { StringMap, TOptions } from \"i18next\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ContentTransModeType,\n  IGameChara,\n  IReleaseCondition,\n} from \"../../types\";\nimport { useCachedData } from \"../../utils\";\nimport { useAssetI18n } from \"../../utils/i18n\";\n\nexport const ContentTrans: React.FC<{\n  mode: ContentTransModeType;\n  contentKey: string;\n  original: string;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({\n  mode,\n  contentKey,\n  original,\n  originalProps,\n  translatedProps,\n  assetTOptions,\n}) => {\n  const { assetT } = useAssetI18n();\n  switch (mode) {\n    case \"original\":\n      return <Typography {...originalProps}>{original}</Typography>;\n    case \"translated\":\n      return (\n        <Typography {...translatedProps} color=\"textPrimary\">\n          {assetT(contentKey, original, assetTOptions)}\n        </Typography>\n      );\n    case \"both\":\n      return (\n        <Grid container direction=\"column\">\n          <Typography {...originalProps} color=\"textPrimary\">\n            {original}\n          </Typography>\n          <Typography {...translatedProps} color=\"textSecondary\">\n            {assetT(contentKey, original, assetTOptions)}\n          </Typography>\n        </Grid>\n      );\n  }\n};\n\nexport const CharaNameTrans: React.FC<{\n  mode: ContentTransModeType;\n  characterId: number;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({ mode, characterId, originalProps, translatedProps, assetTOptions }) => {\n  const [charas] = useCachedData<IGameChara>(\"gameCharacters\");\n  const { assetT, assetI18n } = useAssetI18n();\n\n  const [chara, setChara] = useState<IGameChara>();\n\n  useEffect(() => {\n    if (charas.length) {\n      setChara(charas.find((c) => c.id === characterId));\n    }\n  }, [charas, characterId]);\n\n  if (chara) {\n    switch (mode) {\n      case \"original\":\n        return (\n          <Typography {...originalProps} color=\"textPrimary\">\n            {chara.firstName} {chara.givenName}\n          </Typography>\n        );\n      case \"translated\":\n        return [\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language) ? (\n          <Typography {...translatedProps} color=\"textPrimary\">\n            {chara.firstName\n              ? assetT(\n                  `character_name:${characterId}.firstName`,\n                  chara.firstName,\n                  assetTOptions\n                )\n              : \"\"}{\" \"}\n            {assetT(\n              `character_name:${characterId}.givenName`,\n              chara.givenName,\n              assetTOptions\n            )}\n          </Typography>\n        ) : (\n          <Typography>\n            {assetT(\n              `character_name:${characterId}.givenName`,\n              chara.givenName,\n              assetTOptions\n            )}{\" \"}\n            {chara.firstName\n              ? assetT(\n                  `character_name:${characterId}.firstName`,\n                  chara.firstName,\n                  assetTOptions\n                )\n              : \"\"}\n          </Typography>\n        );\n      case \"both\":\n        return (\n          <Grid container direction=\"column\">\n            <Typography {...originalProps}>\n              {chara.firstName} {chara.givenName}\n            </Typography>\n            {[\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language) ? (\n              <Typography color=\"textSecondary\" {...translatedProps}>\n                {chara.firstName\n                  ? assetT(\n                      `character_name:${characterId}.firstName`,\n                      chara.firstName,\n                      assetTOptions\n                    )\n                  : \"\"}{\" \"}\n                {assetT(\n                  `character_name:${characterId}.givenName`,\n                  chara.givenName,\n                  assetTOptions\n                )}\n              </Typography>\n            ) : (\n              <Typography color=\"textSecondary\" {...translatedProps}>\n                {assetT(\n                  `character_name:${characterId}.givenName`,\n                  chara.givenName,\n                  assetTOptions\n                )}{\" \"}\n                {chara.firstName\n                  ? assetT(\n                      `character_name:${characterId}.firstName`,\n                      chara.firstName,\n                      assetTOptions\n                    )\n                  : \"\"}\n              </Typography>\n            )}\n          </Grid>\n        );\n    }\n  } else {\n    return <Typography></Typography>;\n  }\n};\n\nexport const ReleaseCondTrans: React.FC<{\n  mode: ContentTransModeType;\n  releaseCondId: number;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({\n  mode,\n  releaseCondId,\n  originalProps,\n  translatedProps,\n  assetTOptions,\n}) => {\n  const [releaseConds] = useCachedData<IReleaseCondition>(\"releaseConditions\");\n\n  const [releaseCond, setReleaseCond] = useState<IReleaseCondition>();\n\n  useEffect(() => {\n    if (releaseConds.length) {\n      setReleaseCond(releaseConds.find((rc) => rc.id === releaseCondId));\n    }\n  }, [releaseCondId, releaseConds]);\n\n  if (releaseCond) {\n    let i18nKey = \"\";\n    switch (releaseCond.releaseConditionType) {\n      case \"none\":\n        i18nKey = `release_cond:none_${releaseCond.id}`;\n        break;\n      case \"card_level\":\n        i18nKey = `release_cond:card_level`;\n        assetTOptions = Object.assign({}, assetTOptions, {\n          level: releaseCond.releaseConditionTypeLevel,\n        });\n        break;\n      case \"unit_rank\":\n        i18nKey = `release_cond:unit_rank_${releaseCond.releaseConditionTypeId}`;\n        assetTOptions = Object.assign({}, assetTOptions, {\n          rank: releaseCond.releaseConditionTypeLevel,\n        });\n        break;\n      case \"event_point\":\n        i18nKey = `release_cond:event_point`;\n        assetTOptions = Object.assign({}, assetTOptions, {\n          point: releaseCond.releaseConditionTypeQuantity,\n        });\n        break;\n      default:\n        i18nKey = `release_cond:${releaseCond.releaseConditionType}`;\n        break;\n    }\n    return (\n      <ContentTrans\n        mode={mode}\n        contentKey={i18nKey}\n        original={releaseCond.sentence}\n        originalProps={originalProps}\n        translatedProps={translatedProps}\n        assetTOptions={assetTOptions}\n      />\n    );\n  } else {\n    return <div></div>;\n  }\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useInteractiveStyles = makeStyles((theme) => ({\n  container: {\n    margin: theme.spacing(1, 0),\n    padding: theme.spacing(1, 2),\n  },\n  caption: {\n    [theme.breakpoints.up(\"md\")]: {\n      textAlign: \"right\",\n    },\n  },\n  sliderContainer: {\n    [theme.breakpoints.up(\"md\")]: {\n      paddingRight: theme.spacing(5),\n    },\n  },\n  inputHidden: {\n    display: \"none\",\n  },\n  noDecoration: {\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n    color: theme.palette.text.primary,\n  },\n}));\n\nexport { useInteractiveStyles };\n","import {\n  // Box,\n  Grid,\n  // makeStyles,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\n\n// only divisor of 12\ntype GridSize = 1 | 2 | 3 | 4 | 6 | 12 | undefined;\n\ninterface GridSizeOptions {\n  /**\n   * grid size for `xs` and wider (if not overridden) \\\n   * omit this property or set `undefined` to use default (12)\n   */\n  xs?: GridSize;\n  /**\n   * grid size for `sm` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `xs` \\\n   */\n  sm?: GridSize;\n  /**\n   * grid size for `md` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `sm` \\\n   */\n  md?: GridSize;\n  /**\n   * grid size for `lg` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `md` \\\n   */\n  lg?: GridSize;\n  /**\n   * grid size for `xl` and wider \\\n   * omit this property or set `undefined` to inherit from `lg` \\\n   */\n  xl?: GridSize;\n}\n\ntype CompleteGridSizeOptions = {\n  [T in keyof Required<GridSizeOptions>]: Exclude<GridSize, undefined>;\n};\n\ninterface IISProps<T> {\n  readonly ViewComponent: React.FC<\n    { data?: T; index?: number } & { [key: string]: any }\n  >;\n  readonly callback: (\n    entries: readonly IntersectionObserverEntry[],\n    setHasMore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => void;\n  readonly data: readonly T[];\n  readonly gridSize?: Readonly<GridSizeOptions>;\n  readonly viewProps?: { [key: string]: any };\n  readonly onComponentClick?: (data: T) => void;\n}\n\n// NOTE: `breakpoints` must be sorted ascending by size\nconst breakpoints = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"] as const;\n\nconst defaultXSGridSize: GridSize = 12;\nconst defaultGridSize: Readonly<GridSizeOptions> = {\n  xs: defaultXSGridSize,\n  md: 4,\n};\n\nfunction useBreakpoint(): keyof GridSizeOptions {\n  const theme = useTheme();\n\n  // NOTE: The number of calls to `useMediaQuery` must always be constant.\n  // https://en.reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level\n  const downBreakpoints = breakpoints.map(\n    (breakpoint) =>\n      // NOTE: `down` includes itself\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useMediaQuery(theme.breakpoints.down(breakpoint)) && breakpoint\n  );\n\n  // NOTE: `down('xl')` always returns `true` so `|| breakpoints[breakpoints.length - 1]`\n  //       is not actually needed, but it's written for clarity and typing.\n  return downBreakpoints.find(Boolean) || breakpoints[breakpoints.length - 1];\n}\n\nfunction transformToCompleteGridSizeOptions(\n  _gridSize?: Readonly<GridSizeOptions> | undefined\n): CompleteGridSizeOptions {\n  // use default if gridSize is not provided\n  // not using defaults per properties because `{ md: 4 }` would not be desired\n  const gridSize = {\n    ...(_gridSize || defaultGridSize),\n  };\n\n  // inherit the value of the smaller breakpoint if not specified\n  breakpoints.forEach((v, i, a) => {\n    if (!gridSize[v]) {\n      gridSize[v] = i > 0 ? gridSize[a[i - 1]] : defaultXSGridSize;\n    }\n  });\n\n  return gridSize as CompleteGridSizeOptions;\n}\n\nfunction InfiniteScroll<T>({\n  ViewComponent,\n  callback,\n  data,\n  gridSize: _gridSize,\n  viewProps,\n  onComponentClick,\n}: React.PropsWithChildren<IISProps<T & { id: number }>>): React.ReactElement<\n  IISProps<T>\n> {\n  // this is necessary because of `viewGridSize`\n  const gridSize = transformToCompleteGridSizeOptions(_gridSize);\n\n  const breakpoint = useBreakpoint();\n\n  const [hasMore, setHasMore] = useState<boolean>(true);\n\n  const observer = useRef(\n    new IntersectionObserver((entries) => callback(entries, setHasMore), {\n      threshold: 0.5,\n    })\n  );\n  const listElementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setHasMore(true);\n  }, [data]);\n\n  useEffect(() => {\n    const currentObserver = observer.current;\n    const currentElement = listElementRef.current;\n    if (currentElement) currentObserver.observe(currentElement);\n\n    return () => {\n      if (currentElement) {\n        currentObserver.unobserve(currentElement);\n      }\n    };\n  });\n\n  const viewGridSize = gridSize[breakpoint];\n  const itemsPerRow = 12 / viewGridSize;\n  const numPlaceholders = data.length ? itemsPerRow : itemsPerRow * 2;\n\n  return (\n    <Fragment>\n      <Grid container direction=\"row\" spacing={1}>\n        {data.length\n          ? data.map((data, i) => (\n              <Grid\n                key={data.id}\n                item\n                xs={gridSize.xs}\n                sm={gridSize.sm}\n                md={gridSize.md}\n                lg={gridSize.lg}\n                xl={gridSize.xl}\n                onClick={() => {\n                  if (onComponentClick) onComponentClick(data);\n                }}\n              >\n                <ViewComponent data={data} index={i} {...viewProps} />\n              </Grid>\n            ))\n          : null}\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        ref={listElementRef}\n        style={{ display: hasMore ? \"flex\" : \"none\", paddingTop: \"4px\" }}\n        spacing={1}\n      >\n        {Array.from({\n          length: numPlaceholders,\n        }).map((_, i) => (\n          <Grid\n            key={`empty-${i}`}\n            item\n            xs={gridSize.xs}\n            sm={gridSize.sm}\n            md={gridSize.md}\n            lg={gridSize.lg}\n            xl={gridSize.xl}\n          >\n            <ViewComponent />\n          </Grid>\n        ))}\n      </Grid>\n    </Fragment>\n  );\n}\n\nexport default InfiniteScroll;\n","import { ITeamBuild } from \"../types\";\n\nexport function characterSelectReducer(\n  state: number[],\n  action: { type: \"add\" | \"remove\" | \"reset\"; payload: number }\n) {\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.payload];\n    case \"remove\":\n      return [\n        ...state.slice(0, state.indexOf(action.payload)),\n        ...state.slice(state.indexOf(action.payload) + 1),\n      ];\n    case \"reset\":\n      return [];\n    default:\n      throw new Error();\n  }\n}\n\nexport function attrSelectReducer(\n  state: string[],\n  action: { type: \"add\" | \"remove\" | \"reset\"; payload: string }\n) {\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.payload];\n    case \"remove\":\n      return [\n        ...state.slice(0, state.indexOf(action.payload)),\n        ...state.slice(state.indexOf(action.payload) + 1),\n      ];\n    case \"reset\":\n      return [];\n    default:\n      throw new Error();\n  }\n}\n\nexport function missionTypeReducer(\n  state: string[],\n  action: { type: \"add\" | \"remove\" | \"reset\"; payload: string }\n) {\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.payload];\n    case \"remove\":\n      return [\n        ...state.slice(0, state.indexOf(action.payload)),\n        ...state.slice(state.indexOf(action.payload) + 1),\n      ];\n    case \"reset\":\n      return [];\n    default:\n      throw new Error();\n  }\n}\n\nexport function teamBuildReducer(\n  state: ITeamBuild[],\n  action:\n    | { type: \"add\"; payload: ITeamBuild }\n    | { type: \"remove\"; payload: number }\n    | { type: \"replace\"; payload: { id: number; data: ITeamBuild } }\n) {\n  switch (action.type) {\n    case \"add\": {\n      const teams = [...state, action.payload];\n      localStorage.setItem(\"team-build-array\", JSON.stringify(teams));\n      return teams;\n    }\n    case \"remove\": {\n      const teams = [\n        ...state.slice(0, action.payload),\n        ...state.slice(action.payload + 1),\n      ];\n      localStorage.setItem(\"team-build-array\", JSON.stringify(teams));\n      return teams;\n    }\n    case \"replace\": {\n      const teams = [\n        ...state.slice(0, action.payload.id),\n        action.payload.data,\n        ...state.slice(action.payload.id + 1),\n      ];\n      localStorage.setItem(\"team-build-array\", JSON.stringify(teams));\n      return teams;\n    }\n    default:\n      throw new Error();\n  }\n}\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport capitalize from '../utils/capitalize';\nimport withStyles from '../styles/withStyles';\nimport { elementTypeAcceptingRef } from '@material-ui/utils';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useForkRef from '../utils/useForkRef';\nimport Typography from '../Typography';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the root element if `underline=\"none\"`. */\n  underlineNone: {\n    textDecoration: 'none'\n  },\n\n  /* Styles applied to the root element if `underline=\"hover\"`. */\n  underlineHover: {\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'underline'\n    }\n  },\n\n  /* Styles applied to the root element if `underline=\"always\"`. */\n  underlineAlways: {\n    textDecoration: 'underline'\n  },\n  // Same reset as ButtonBase.root\n\n  /* Styles applied to the root element if `component=\"button\"`. */\n  button: {\n    position: 'relative',\n    WebkitTapHighlightColor: 'transparent',\n    backgroundColor: 'transparent',\n    // Reset default value\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    border: 0,\n    margin: 0,\n    // Remove the margin in Safari\n    borderRadius: 0,\n    padding: 0,\n    // Remove the padding in Firefox\n    cursor: 'pointer',\n    userSelect: 'none',\n    verticalAlign: 'middle',\n    '-moz-appearance': 'none',\n    // Reset\n    '-webkit-appearance': 'none',\n    // Reset\n    '&::-moz-focus-inner': {\n      borderStyle: 'none' // Remove Firefox dotted outline.\n\n    },\n    '&$focusVisible': {\n      outline: 'auto'\n    }\n  },\n\n  /* Pseudo-class applied to the root element if the link is keyboard focused. */\n  focusVisible: {}\n};\nvar Link = /*#__PURE__*/React.forwardRef(function Link(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'a' : _props$component,\n      onBlur = props.onBlur,\n      onFocus = props.onFocus,\n      TypographyClasses = props.TypographyClasses,\n      _props$underline = props.underline,\n      underline = _props$underline === void 0 ? 'hover' : _props$underline,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'inherit' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"onBlur\", \"onFocus\", \"TypographyClasses\", \"underline\", \"variant\"]);\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState = React.useState(false),\n      focusVisible = _React$useState[0],\n      setFocusVisible = _React$useState[1];\n\n  var handlerRef = useForkRef(ref, focusVisibleRef);\n\n  var handleBlur = function handleBlur(event) {\n    if (focusVisible) {\n      onBlurVisible();\n      setFocusVisible(false);\n    }\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var handleFocus = function handleFocus(event) {\n    if (isFocusVisible(event)) {\n      setFocusVisible(true);\n    }\n\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    className: clsx(classes.root, classes[\"underline\".concat(capitalize(underline))], className, focusVisible && classes.focusVisible, component === 'button' && classes.button),\n    classes: TypographyClasses,\n    color: color,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: handlerRef,\n    variant: variant\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes = {\n  /**\n   * The content of the link.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the link.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * `classes` prop applied to the [`Typography`](/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n\n  /**\n   * Controls when the link should have an underline.\n   */\n  underline: PropTypes.oneOf(['none', 'hover', 'always']),\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiLink'\n})(Link);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M21 10.12h-6.78l2.74-2.82c-2.73-2.7-7.15-2.8-9.88-.1-2.73 2.71-2.73 7.08 0 9.79s7.15 2.71 9.88 0C18.32 15.65 19 14.08 19 12.1h2c0 1.98-.88 4.55-2.64 6.29-3.51 3.48-9.21 3.48-12.72 0-3.5-3.47-3.53-9.11-.02-12.58s9.14-3.47 12.65 0L21 3v7.12zM12.5 8v4.25l3.5 2.08-.72 1.21L11 13V8h1.5z\"\n}), 'Update');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M5 4v2h14V4H5zm0 10h4v6h6v-6h4l-7-7-7 7z\"\n}), 'Publish');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M5 4h14v2H5zm0 10h4v6h6v-6h4l-7-7-7 7zm8-2v6h-2v-6H9.83L12 9.83 14.17 12H13z\"\n}), 'PublishOutlined');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z\"\n}), 'GetApp');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M13 5v6h1.17L12 13.17 9.83 11H11V5h2m2-2H9v6H5l7 7 7-7h-4V3zm4 15H5v2h14v-2z\"\n}), 'GetAppOutlined');","import {\n  Card,\n  CardContent,\n  Typography,\n  Link,\n  CardMedia,\n  makeStyles,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport { SettingContext } from \"../../context\";\nimport { IStampInfo } from \"../../types\";\nimport { getRemoteAssetURL } from \"../../utils\";\nimport { ContentTrans } from \"../subs/ContentTrans\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    marginTop: \"0.5em\",\n    paddingTop: \"75%\",\n    backgroundSize: \"contain\",\n  },\n  card: {\n    // margin: theme.spacing(0.5),\n    cursor: \"pointer\",\n  },\n  subheader: {\n    // \"white-space\": \"nowrap\",\n    // overflow: \"hidden\",\n    // \"text-overflow\": \"ellipsis\",\n    // \"max-width\": \"260px\",\n  },\n}));\n\nconst GridView: React.FC<{ data?: IStampInfo }> = ({ data }) => {\n  const classes = useStyles();\n  const { contentTransMode } = useContext(SettingContext)!;\n\n  const [url, setUrl] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (data) {\n      getRemoteAssetURL(\n        `stamp/${data.assetbundleName}_rip/${data.assetbundleName}/${data.assetbundleName}.webp`,\n        setUrl\n      );\n    }\n  }, [data]);\n\n  if (!data) {\n    // loading\n    return (\n      <Card className={classes.card}>\n        <Skeleton variant=\"rect\" className={classes.media}></Skeleton>\n        <CardContent>\n          <Typography variant=\"subtitle1\" className={classes.subheader}>\n            <Skeleton variant=\"text\" width=\"90%\"></Skeleton>\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n  return (\n    <Link href={url} target=\"_blank\" style={{ textDecoration: \"none\" }}>\n      <Card className={classes.card}>\n        <CardMedia\n          className={classes.media}\n          image={url}\n          title={data.name}\n        ></CardMedia>\n        <CardContent style={{ paddingBottom: \"16px\" }}>\n          <ContentTrans\n            mode={contentTransMode}\n            contentKey={`stamp_name:${data.id}`}\n            original={data.name.replace(/\\[.*\\]/, \"\").replace(/^.*：/, \"\")}\n            originalProps={{\n              variant: \"subtitle1\",\n            }}\n            translatedProps={{\n              variant: \"subtitle1\",\n            }}\n          />\n        </CardContent>\n      </Card>\n    </Link>\n  );\n};\n\nexport default GridView;\n","import {\n  Avatar,\n  Button,\n  ButtonGroup,\n  Chip,\n  Collapse,\n  Container,\n  Grid,\n  Typography,\n  Paper,\n} from \"@material-ui/core\";\nimport {\n  GetApp,\n  GetAppOutlined,\n  Publish,\n  PublishOutlined,\n  Sort,\n  SortOutlined,\n  Update,\n} from \"@material-ui/icons\";\nimport { FilterOutline, Filter } from \"mdi-material-ui\";\nimport React, {\n  Fragment,\n  useCallback,\n  useContext,\n  useEffect,\n  useReducer,\n  useState,\n} from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { SettingContext } from \"../../context\";\nimport { characterSelectReducer } from \"../../stores/reducers\";\nimport { useInteractiveStyles } from \"../../styles/interactive\";\nimport { useLayoutStyles } from \"../../styles/layout\";\nimport { IStampInfo } from \"../../types\";\nimport { useCachedData, useCharaName, useRefState } from \"../../utils\";\nimport { charaIcons } from \"../../utils/resources\";\nimport GridView from \"./GridView\";\nimport InfiniteScroll from \"../subs/InfiniteScroll\";\n\nconst ListCard: React.FC<{ data?: IStampInfo }> = GridView;\n\nconst StampList: React.FC<{}> = () => {\n  const layoutClasses = useLayoutStyles();\n  const interactiveClasses = useInteractiveStyles();\n  const { t } = useTranslation();\n  const { contentTransMode } = useContext(SettingContext)!;\n  const getCharaName = useCharaName(contentTransMode);\n\n  const [stampsCache] = useCachedData<IStampInfo>(\"stamps\");\n\n  const [stamps, setStamps] = useState<IStampInfo[]>([]);\n  const [filteredCache, filteredCacheRef, setFilteredCache] = useRefState<\n    IStampInfo[]\n  >([]);\n  const [filterOpened, setFilterOpened] = useState<boolean>(false);\n  const [updateSort, setUpdateSort] = useState<\"asc\" | \"desc\">(\n    (localStorage.getItem(\"stamp-list-update-sort\") || \"desc\") as \"desc\"\n  );\n  const [characterSelected, dispatchCharacterSelected] = useReducer(\n    characterSelectReducer,\n    []\n  );\n\n  const [page, pageRef, setPage] = useRefState<number>(0);\n  const [limit, limitRef] = useRefState<number>(12);\n  const [, lastQueryFinRef, setLastQueryFin] = useRefState<boolean>(true);\n  const [, isReadyRef, setIsReady] = useRefState<boolean>(false);\n\n  const getPaginatedStamps = useCallback(\n    (page: number, limit: number) => {\n      return filteredCache.slice(limit * (page - 1), limit * page);\n    },\n    [filteredCache]\n  );\n\n  const callback = (\n    entries: readonly IntersectionObserverEntry[],\n    setHasMore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => {\n    if (!isReadyRef.current) return;\n    if (\n      entries[0].isIntersecting &&\n      lastQueryFinRef.current &&\n      (!filteredCacheRef.current.length ||\n        filteredCacheRef.current.length > pageRef.current * limitRef.current)\n    ) {\n      setPage((page) => page + 1);\n      setLastQueryFin(false);\n    } else if (\n      filteredCacheRef.current.length &&\n      filteredCacheRef.current.length <= pageRef.current * limitRef.current\n    ) {\n      setHasMore(false);\n    }\n  };\n\n  useEffect(() => {\n    document.title = t(\"title:stampList\");\n  }, [t]);\n\n  useEffect(() => {\n    if (stampsCache.length) {\n      let cache = stampsCache;\n      if (characterSelected.length) {\n        cache = stampsCache.filter((s) =>\n          characterSelected.includes(s.characterId1)\n        );\n      } else {\n        cache = stampsCache;\n      }\n      if (updateSort === \"desc\") {\n        cache = cache.sort((a, b) => b.id - a.id);\n      } else if (updateSort === \"asc\") {\n        cache = cache.sort((a, b) => a.id - b.id);\n      }\n      setFilteredCache(cache);\n      setStamps([]);\n      setPage(0);\n    }\n  }, [\n    characterSelected,\n    stampsCache,\n    setStamps,\n    setPage,\n    setFilteredCache,\n    updateSort,\n  ]);\n\n  useEffect(() => {\n    setStamps((stamps) => [...stamps, ...getPaginatedStamps(page, limit)]);\n    setLastQueryFin(true);\n  }, [page, limit, setLastQueryFin, stampsCache, getPaginatedStamps]);\n\n  useEffect(() => {\n    setIsReady(Boolean(stampsCache.length));\n  }, [setIsReady, stampsCache]);\n\n  const handleUpdateSort = useCallback((sort: \"asc\" | \"desc\") => {\n    setUpdateSort(sort);\n    localStorage.setItem(\"stamp-list-update-sort\", sort);\n  }, []);\n\n  return (\n    <Fragment>\n      <Typography variant=\"h6\" className={layoutClasses.header}>\n        {t(\"common:stamp\")}\n      </Typography>\n      <Container className={layoutClasses.content}>\n        <Grid container justify=\"space-between\">\n          <ButtonGroup color=\"primary\" style={{ marginBottom: \"1%\" }}>\n            <Button size=\"medium\" onClick={() => handleUpdateSort(\"asc\")}>\n              <Update />\n              {updateSort === \"asc\" ? <Publish /> : <PublishOutlined />}\n            </Button>\n            <Button size=\"medium\" onClick={() => handleUpdateSort(\"desc\")}>\n              <Update />\n              {updateSort === \"desc\" ? <GetApp /> : <GetAppOutlined />}\n            </Button>\n          </ButtonGroup>\n          <ButtonGroup color=\"primary\" style={{ marginBottom: \"1%\" }}>\n            <Button size=\"medium\" onClick={() => setFilterOpened((v) => !v)}>\n              {filterOpened ? <Filter /> : <FilterOutline />}\n              {filterOpened ? <Sort /> : <SortOutlined />}\n            </Button>\n          </ButtonGroup>\n        </Grid>\n        <Collapse in={filterOpened}>\n          <Paper className={interactiveClasses.container}>\n            <Grid container direction=\"column\" spacing={1}>\n              <Grid\n                item\n                container\n                xs={12}\n                alignItems=\"center\"\n                justify=\"space-between\"\n              >\n                <Grid item xs={12} md={1}>\n                  <Typography classes={{ root: interactiveClasses.caption }}>\n                    {t(\"filter:character.caption\")}\n                  </Typography>\n                </Grid>\n                <Grid item xs={12} md={10}>\n                  <Grid container spacing={1}>\n                    {Array.from({ length: 26 }).map((_, idx) => (\n                      <Grid key={\"chara-filter-\" + idx} item>\n                        <Chip\n                          clickable\n                          color={\n                            characterSelected.includes(idx + 1)\n                              ? \"primary\"\n                              : \"default\"\n                          }\n                          avatar={\n                            <Avatar\n                              alt={getCharaName(idx + 1)}\n                              src={\n                                charaIcons[\n                                  `CharaIcon${idx + 1}` as \"CharaIcon1\"\n                                ]\n                              }\n                            />\n                          }\n                          label={getCharaName(idx + 1)}\n                          onClick={() => {\n                            if (characterSelected.includes(idx + 1)) {\n                              dispatchCharacterSelected({\n                                type: \"remove\",\n                                payload: idx + 1,\n                              });\n                            } else {\n                              dispatchCharacterSelected({\n                                type: \"add\",\n                                payload: idx + 1,\n                              });\n                            }\n                          }}\n                        />\n                      </Grid>\n                    ))}\n                  </Grid>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Collapse>\n        {InfiniteScroll<IStampInfo>({\n          ViewComponent: ListCard,\n          callback,\n          data: stamps,\n          gridSize: {\n            xs: 6,\n            sm: 4,\n            md: 3,\n            lg: 2,\n          },\n        })}\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default StampList;\n"],"sourceRoot":""}