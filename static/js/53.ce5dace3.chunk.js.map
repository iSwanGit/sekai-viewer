{"version":3,"sources":["components/MemberList.tsx"],"names":["useStyle","makeStyles","theme","unitIcon","breakpoints","down","height","memberSelectImg","width","cursor","MemberImage","id","classes","path","useRouteMatch","useState","url","setUrl","useEffect","getRemoteAssetURL","item","xs","md","key","to","style","textDecoration","className","src","alt","String","MemberList","layoutClasses","useLayoutStyles","t","useTranslation","useCachedData","unitProfiles","gameCharas","charaUnitMap","setCharaUnitMap","document","title","length","units","sort","a","b","seq","map","up","unit","reduce","sum","filter","gc","variant","header","container","spacing","direction","Object","keys","justify","margin","UnitLogoMap","marginBottom","chara"],"mappings":"qPASMA,EAAWC,aAAW,SAACC,GAAD,YAAY,CACtCC,UAAQ,mBACLD,EAAME,YAAYC,KAAK,MAAQ,CAC9BC,OAAQ,SAFJ,uBAIE,QAJF,GAMRC,gBAAiB,CACfC,MAAO,OACPC,OAAQ,eAINC,EAAwC,SAAC,GAAY,IAAVC,EAAS,EAATA,GACzCC,EAAUZ,IACRa,EAASC,cAATD,KAFgD,EAIlCE,mBAAiB,IAJiB,mBAIjDC,EAJiD,KAI5CC,EAJ4C,KAaxD,OAPAC,qBAAU,WACRC,YAAkB,yCAAD,OAC0BR,EAD1B,SAEfM,KAED,CAACN,IAGF,kBAAC,IAAD,CAAMS,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,IAAG,gBAAWZ,IACrC,kBAAC,IAAD,CAAMa,GAAIX,EAAO,IAAMF,EAAIc,MAAO,CAAEC,eAAgB,SAClD,yBACEC,UAAWf,EAAQL,gBACnBqB,IAAKZ,EACLa,IAAKC,OAAOnB,QAwEPoB,UAjEkB,WAC/B,IAAMnB,EAAUZ,IACVgC,EAAgBC,cACdC,EAAMC,cAAND,EAH6B,EAKdE,YAA4B,gBAA5CC,EAL8B,sBAMhBD,YAA0B,kBAAxCE,EAN8B,sBAQGvB,mBAErC,IAVkC,mBAQ9BwB,EAR8B,KAQhBC,EARgB,KA8BrC,OAlBAtB,qBAAU,WACRuB,SAASC,MAAQR,EAAE,sBAClB,CAACA,IAEJhB,qBAAU,WACR,GAAImB,EAAaM,QAAUL,EAAWK,OAAQ,CAC5C,IAAMC,EAAQP,EACXQ,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,IAAMD,EAAEC,OACzBC,KAAI,SAACC,GAAD,OAAQA,EAAGC,QAClBX,EACEI,EAAMQ,QAAwC,SAACC,EAAKF,GAElD,OADAE,EAAIF,GAAQb,EAAWgB,QAAO,SAACC,GAAD,OAAQA,EAAGJ,OAASA,KAC3CE,IACN,QAGN,CAAChB,EAAcC,IAGhB,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAYkB,QAAQ,KAAK7B,UAAWK,EAAcyB,QAC/CvB,EAAE,qBAEL,kBAAC,IAAD,CAAMwB,WAAS,EAACC,QAAS,EAAGC,UAAU,UACnCC,OAAOC,KAAKvB,GAAcU,KAAI,SAACE,GAAD,OAC7B,kBAAC,WAAD,CAAU5B,IAAG,eAAU4B,IACrB,kBAAC,IAAD,CAAM/B,MAAI,EAACsC,WAAS,EAACK,QAAQ,SAAStC,MAAO,CAAEuC,OAAQ,YACrD,kBAAC,IAAD,CAAMxC,GAAI,SAAW2B,GACnB,yBACExB,UAAWf,EAAQT,SACnByB,IAAKqC,IAAYd,GACjBtB,IAAKsB,MAIX,kBAAC,IAAD,CACE/B,MAAI,EACJsC,WAAS,EACTK,QAAQ,SACRJ,QAAS,EACTlC,MAAO,CAAEyC,aAAc,QAEtB3B,EAAaY,GAAMF,KAAI,SAACkB,GAAD,OACtB,kBAACzD,EAAD,CAAaC,GAAIwD,EAAMxD","file":"static/js/53.ce5dace3.chunk.js","sourcesContent":["import { Grid, makeStyles, Typography } from \"@material-ui/core\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\nimport { useLayoutStyles } from \"../styles/layout\";\nimport { IGameChara, IUnitProfile } from \"../types\";\nimport { getRemoteAssetURL, useCachedData } from \"../utils\";\nimport { UnitLogoMap } from \"../utils/resources\";\n\nconst useStyle = makeStyles((theme) => ({\n  unitIcon: {\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"48px\",\n    },\n    height: \"96px\",\n  },\n  memberSelectImg: {\n    width: \"100%\",\n    cursor: \"pointer\",\n  },\n}));\n\nconst MemberImage: React.FC<{ id: number }> = ({ id }) => {\n  const classes = useStyle();\n  const { path } = useRouteMatch();\n\n  const [url, setUrl] = useState<string>(\"\");\n\n  useEffect(() => {\n    getRemoteAssetURL(\n      `character/character_select_rip/chr_tl_${id}.webp`,\n      setUrl\n    );\n  }, [id]);\n\n  return (\n    <Grid item xs={3} md={2} key={`chara-${id}`}>\n      <Link to={path + \"/\" + id} style={{ textDecoration: \"none\" }}>\n        <img\n          className={classes.memberSelectImg}\n          src={url}\n          alt={String(id)}\n        ></img>\n      </Link>\n    </Grid>\n  );\n};\n\nconst MemberList: React.FC<{}> = () => {\n  const classes = useStyle();\n  const layoutClasses = useLayoutStyles();\n  const { t } = useTranslation();\n\n  const [unitProfiles] = useCachedData<IUnitProfile>(\"unitProfiles\");\n  const [gameCharas] = useCachedData<IGameChara>(\"gameCharacters\");\n\n  const [charaUnitMap, setCharaUnitMap] = useState<{\n    [key: string]: IGameChara[];\n  }>({});\n\n  useEffect(() => {\n    document.title = t(\"title:memberList\");\n  }, [t]);\n\n  useEffect(() => {\n    if (unitProfiles.length && gameCharas.length) {\n      const units = unitProfiles\n        .sort((a, b) => a.seq - b.seq)\n        .map((up) => up.unit);\n      setCharaUnitMap(\n        units.reduce<{ [key: string]: IGameChara[] }>((sum, unit) => {\n          sum[unit] = gameCharas.filter((gc) => gc.unit === unit);\n          return sum;\n        }, {})\n      );\n    }\n  }, [unitProfiles, gameCharas]);\n\n  return (\n    <Fragment>\n      <Typography variant=\"h6\" className={layoutClasses.header}>\n        {t(\"common:character\")}\n      </Typography>\n      <Grid container spacing={1} direction=\"column\">\n        {Object.keys(charaUnitMap).map((unit) => (\n          <Fragment key={`unit-${unit}`}>\n            <Grid item container justify=\"center\" style={{ margin: \"0.3em 0\" }}>\n              <Link to={\"/unit/\" + unit}>\n                <img\n                  className={classes.unitIcon}\n                  src={UnitLogoMap[unit]}\n                  alt={unit}\n                ></img>\n              </Link>\n            </Grid>\n            <Grid\n              item\n              container\n              justify=\"center\"\n              spacing={2}\n              style={{ marginBottom: \"1em\" }}\n            >\n              {charaUnitMap[unit].map((chara) => (\n                <MemberImage id={chara.id} />\n              ))}\n            </Grid>\n          </Fragment>\n        ))}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default MemberList;\n"],"sourceRoot":""}