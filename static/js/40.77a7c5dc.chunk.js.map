{"version":3,"sources":["components/subs/ContentTrans.tsx","styles/interactive.ts","styles/svg.ts","components/subs/InfiniteScroll.tsx","stores/reducers.ts","components/subs/DegreeImage.tsx","components/mission/honor/GridView.tsx","components/mission/honor/TitleMissionList.tsx"],"names":["ContentTrans","mode","contentKey","original","originalProps","translatedProps","assetTOptions","assetT","useAssetI18n","color","container","direction","CharaNameTrans","characterId","useCachedData","charas","assetI18n","useState","chara","setChara","useEffect","length","find","c","id","firstName","givenName","includes","language","ReleaseCondTrans","releaseCondId","releaseConds","releaseCond","setReleaseCond","rc","i18nKey","releaseConditionType","Object","assign","level","releaseConditionTypeLevel","releaseConditionTypeId","rank","point","releaseConditionTypeQuantity","sentence","useInteractiveStyles","makeStyles","theme","margin","spacing","padding","caption","breakpoints","up","textAlign","sliderContainer","paddingRight","inputHidden","display","noDecoration","textDecoration","palette","text","primary","useSvgStyles","svg","width","height","pointerEvents","skeleton","paddingTop","defaultGridSize","xs","md","InfiniteScroll","ViewComponent","callback","data","_gridSize","gridSize","viewProps","onComponentClick","forEach","v","i","a","transformToCompleteGridSizeOptions","breakpoint","useTheme","map","useMediaQuery","down","Boolean","useBreakpoint","hasMore","setHasMore","observer","useRef","IntersectionObserver","entries","threshold","listElementRef","currentObserver","current","currentElement","observe","unobserve","itemsPerRow","numPlaceholders","key","item","sm","lg","xl","onClick","index","ref","style","Array","from","_","characterSelectReducer","state","action","type","payload","slice","indexOf","Error","attrSelectReducer","missionTypeReducer","teamBuildReducer","teams","localStorage","setItem","JSON","stringify","DegreeImage","resourceBoxId","honorId","classes","resourceBoxes","honors","honor","setHonor","degreeImage","setDegreeImage","degreeRankImage","setDegreeRankImage","resBox","resourceBoxPurpose","details","detail","resourceType","resourceId","undefined","getRemoteAssetURL","assetbundleName","name","startsWith","className","xmlns","viewBox","href","x","y","degreeFrameMap","honorRarity","variant","useStyles","media","backgroundSize","card","cursor","header","ListCard","grid","getTranslated","contentTransMode","useContext","SettingContext","Card","CardMedia","title","rewards","CardContent","paddingBottom","Grid","Skeleton","Typography","DetailDialog","open","onClose","missionData","t","useTranslation","honorGroups","honorGroup","setHonorGroup","hg","groupId","Dialog","fullWidth","DialogContent","justify","wrap","alignItems","fontWeight","Divider","align","honorMissionType","requirement","honorType","levels","description","TitleMissionList","layoutClasses","useLayoutStyles","interactiveClasses","honorMissionsCache","honorMissions","setHonorMissions","setOpen","setResourceBoxId","honorMission","setHonorMission","getItem","viewGridType","useRefState","page","pageRef","setPage","limit","limitRef","lastQueryFinRef","setLastQueryFin","isReadyRef","setIsReady","filterOpened","setFilterOpened","useReducer","missionTypeSelected","dispatchMissionTypeSelected","sortedCache","sortedCacheRef","setSortedCache","document","result","filter","some","mt","events","getPaginatedHonorMissions","Container","content","ButtonGroup","marginBottom","Button","size","Sort","SortOutlined","Collapse","in","Paper","root","tag","Chip","clickable","label","isIntersecting","agenda","comfy"],"mappings":"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","file":"static/js/40.77a7c5dc.chunk.js","sourcesContent":["import { Grid, Typography, TypographyProps } from \"@material-ui/core\";\nimport { StringMap, TOptions } from \"i18next\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  ContentTransModeType,\n  IGameChara,\n  IReleaseCondition,\n} from \"../../types\";\nimport { useCachedData } from \"../../utils\";\nimport { useAssetI18n } from \"../../utils/i18n\";\n\nexport const ContentTrans: React.FC<{\n  mode: ContentTransModeType;\n  contentKey: string;\n  original: string;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({\n  mode,\n  contentKey,\n  original,\n  originalProps,\n  translatedProps,\n  assetTOptions,\n}) => {\n  const { assetT } = useAssetI18n();\n  switch (mode) {\n    case \"original\":\n      return <Typography {...originalProps}>{original}</Typography>;\n    case \"translated\":\n      return (\n        <Typography {...translatedProps} color=\"textPrimary\">\n          {assetT(contentKey, original, assetTOptions)}\n        </Typography>\n      );\n    case \"both\":\n      return (\n        <Grid container direction=\"column\">\n          <Typography {...originalProps} color=\"textPrimary\">\n            {original}\n          </Typography>\n          <Typography {...translatedProps} color=\"textSecondary\">\n            {assetT(contentKey, original, assetTOptions)}\n          </Typography>\n        </Grid>\n      );\n  }\n};\n\nexport const CharaNameTrans: React.FC<{\n  mode: ContentTransModeType;\n  characterId: number;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({ mode, characterId, originalProps, translatedProps, assetTOptions }) => {\n  const [charas] = useCachedData<IGameChara>(\"gameCharacters\");\n  const { assetT, assetI18n } = useAssetI18n();\n\n  const [chara, setChara] = useState<IGameChara>();\n\n  useEffect(() => {\n    if (charas.length) {\n      setChara(charas.find((c) => c.id === characterId));\n    }\n  }, [charas, characterId]);\n\n  if (chara) {\n    switch (mode) {\n      case \"original\":\n        return (\n          <Typography {...originalProps} color=\"textPrimary\">\n            {chara.firstName} {chara.givenName}\n          </Typography>\n        );\n      case \"translated\":\n        return [\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language) ? (\n          <Typography {...translatedProps} color=\"textPrimary\">\n            {chara.firstName\n              ? assetT(\n                  `character_name:${characterId}.firstName`,\n                  chara.firstName,\n                  assetTOptions\n                )\n              : \"\"}{\" \"}\n            {assetT(\n              `character_name:${characterId}.givenName`,\n              chara.givenName,\n              assetTOptions\n            )}\n          </Typography>\n        ) : (\n          <Typography>\n            {assetT(\n              `character_name:${characterId}.givenName`,\n              chara.givenName,\n              assetTOptions\n            )}{\" \"}\n            {chara.firstName\n              ? assetT(\n                  `character_name:${characterId}.firstName`,\n                  chara.firstName,\n                  assetTOptions\n                )\n              : \"\"}\n          </Typography>\n        );\n      case \"both\":\n        return (\n          <Grid container direction=\"column\">\n            <Typography {...originalProps}>\n              {chara.firstName} {chara.givenName}\n            </Typography>\n            {[\"zh-CN\", \"zh-TW\", \"ko\", \"ja\"].includes(assetI18n.language) ? (\n              <Typography color=\"textSecondary\" {...translatedProps}>\n                {chara.firstName\n                  ? assetT(\n                      `character_name:${characterId}.firstName`,\n                      chara.firstName,\n                      assetTOptions\n                    )\n                  : \"\"}{\" \"}\n                {assetT(\n                  `character_name:${characterId}.givenName`,\n                  chara.givenName,\n                  assetTOptions\n                )}\n              </Typography>\n            ) : (\n              <Typography color=\"textSecondary\" {...translatedProps}>\n                {assetT(\n                  `character_name:${characterId}.givenName`,\n                  chara.givenName,\n                  assetTOptions\n                )}{\" \"}\n                {chara.firstName\n                  ? assetT(\n                      `character_name:${characterId}.firstName`,\n                      chara.firstName,\n                      assetTOptions\n                    )\n                  : \"\"}\n              </Typography>\n            )}\n          </Grid>\n        );\n    }\n  } else {\n    return <Typography></Typography>;\n  }\n};\n\nexport const ReleaseCondTrans: React.FC<{\n  mode: ContentTransModeType;\n  releaseCondId: number;\n  originalProps?: TypographyProps;\n  translatedProps?: TypographyProps;\n  assetTOptions?: string | TOptions<StringMap>;\n}> = ({\n  mode,\n  releaseCondId,\n  originalProps,\n  translatedProps,\n  assetTOptions,\n}) => {\n  const [releaseConds] = useCachedData<IReleaseCondition>(\"releaseConditions\");\n\n  const [releaseCond, setReleaseCond] = useState<IReleaseCondition>();\n\n  useEffect(() => {\n    if (releaseConds.length) {\n      setReleaseCond(releaseConds.find((rc) => rc.id === releaseCondId));\n    }\n  }, [releaseCondId, releaseConds]);\n\n  if (releaseCond) {\n    let i18nKey = \"\";\n    switch (releaseCond.releaseConditionType) {\n      case \"none\":\n        i18nKey = `release_cond:none_${releaseCond.id}`;\n        break;\n      case \"card_level\":\n        i18nKey = `release_cond:card_level`;\n        assetTOptions = Object.assign({}, assetTOptions, {\n          level: releaseCond.releaseConditionTypeLevel,\n        });\n        break;\n      case \"unit_rank\":\n        i18nKey = `release_cond:unit_rank_${releaseCond.releaseConditionTypeId}`;\n        assetTOptions = Object.assign({}, assetTOptions, {\n          rank: releaseCond.releaseConditionTypeLevel,\n        });\n        break;\n      case \"event_point\":\n        i18nKey = `release_cond:event_point`;\n        assetTOptions = Object.assign({}, assetTOptions, {\n          point: releaseCond.releaseConditionTypeQuantity,\n        });\n        break;\n      default:\n        i18nKey = `release_cond:${releaseCond.releaseConditionType}`;\n        break;\n    }\n    return (\n      <ContentTrans\n        mode={mode}\n        contentKey={i18nKey}\n        original={releaseCond.sentence}\n        originalProps={originalProps}\n        translatedProps={translatedProps}\n        assetTOptions={assetTOptions}\n      />\n    );\n  } else {\n    return <div></div>;\n  }\n};\n","import { makeStyles } from \"@material-ui/core\";\n\nconst useInteractiveStyles = makeStyles((theme) => ({\n  container: {\n    margin: theme.spacing(1, 0),\n    padding: theme.spacing(1, 2),\n  },\n  caption: {\n    [theme.breakpoints.up(\"md\")]: {\n      textAlign: \"right\",\n    },\n  },\n  sliderContainer: {\n    [theme.breakpoints.up(\"md\")]: {\n      paddingRight: theme.spacing(5),\n    },\n  },\n  inputHidden: {\n    display: \"none\",\n  },\n  noDecoration: {\n    textDecoration: \"none\",\n    \"&:hover\": {\n      textDecoration: \"underline\",\n    },\n    color: theme.palette.text.primary,\n  },\n}));\n\nexport { useInteractiveStyles };\n","import { makeStyles } from \"@material-ui/core\";\n\nexport const useSvgStyles = makeStyles(() => ({\n  svg: {\n    display: \"block\",\n    width: \"100%\",\n    height: \"100%\",\n    pointerEvents: \"visibleStroke\",\n  },\n  skeleton: {\n    width: \"100%\",\n    paddingTop: \"100%\",\n  },\n}));\n","import {\n  // Box,\n  Grid,\n  // makeStyles,\n  useMediaQuery,\n  useTheme,\n} from \"@material-ui/core\";\nimport React, { Fragment, useEffect, useRef, useState } from \"react\";\n\n// only divisor of 12\ntype GridSize = 1 | 2 | 3 | 4 | 6 | 12 | undefined;\n\ninterface GridSizeOptions {\n  /**\n   * grid size for `xs` and wider (if not overridden) \\\n   * omit this property or set `undefined` to use default (12)\n   */\n  xs?: GridSize;\n  /**\n   * grid size for `sm` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `xs` \\\n   */\n  sm?: GridSize;\n  /**\n   * grid size for `md` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `sm` \\\n   */\n  md?: GridSize;\n  /**\n   * grid size for `lg` and wider (if not overridden) \\\n   * omit this property or set `undefined` to inherit from `md` \\\n   */\n  lg?: GridSize;\n  /**\n   * grid size for `xl` and wider \\\n   * omit this property or set `undefined` to inherit from `lg` \\\n   */\n  xl?: GridSize;\n}\n\ntype CompleteGridSizeOptions = {\n  [T in keyof Required<GridSizeOptions>]: Exclude<GridSize, undefined>;\n};\n\ninterface IISProps<T> {\n  readonly ViewComponent: React.FC<\n    { data?: T; index?: number } & { [key: string]: any }\n  >;\n  readonly callback: (\n    entries: readonly IntersectionObserverEntry[],\n    setHasMore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => void;\n  readonly data: readonly T[];\n  readonly gridSize?: Readonly<GridSizeOptions>;\n  readonly viewProps?: { [key: string]: any };\n  readonly onComponentClick?: (data: T) => void;\n}\n\n// NOTE: `breakpoints` must be sorted ascending by size\nconst breakpoints = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"] as const;\n\nconst defaultXSGridSize: GridSize = 12;\nconst defaultGridSize: Readonly<GridSizeOptions> = {\n  xs: defaultXSGridSize,\n  md: 4,\n};\n\nfunction useBreakpoint(): keyof GridSizeOptions {\n  const theme = useTheme();\n\n  // NOTE: The number of calls to `useMediaQuery` must always be constant.\n  // https://en.reactjs.org/docs/hooks-rules.html#only-call-hooks-at-the-top-level\n  const downBreakpoints = breakpoints.map(\n    (breakpoint) =>\n      // NOTE: `down` includes itself\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useMediaQuery(theme.breakpoints.down(breakpoint)) && breakpoint\n  );\n\n  // NOTE: `down('xl')` always returns `true` so `|| breakpoints[breakpoints.length - 1]`\n  //       is not actually needed, but it's written for clarity and typing.\n  return downBreakpoints.find(Boolean) || breakpoints[breakpoints.length - 1];\n}\n\nfunction transformToCompleteGridSizeOptions(\n  _gridSize?: Readonly<GridSizeOptions> | undefined\n): CompleteGridSizeOptions {\n  // use default if gridSize is not provided\n  // not using defaults per properties because `{ md: 4 }` would not be desired\n  const gridSize = {\n    ...(_gridSize || defaultGridSize),\n  };\n\n  // inherit the value of the smaller breakpoint if not specified\n  breakpoints.forEach((v, i, a) => {\n    if (!gridSize[v]) {\n      gridSize[v] = i > 0 ? gridSize[a[i - 1]] : defaultXSGridSize;\n    }\n  });\n\n  return gridSize as CompleteGridSizeOptions;\n}\n\nfunction InfiniteScroll<T>({\n  ViewComponent,\n  callback,\n  data,\n  gridSize: _gridSize,\n  viewProps,\n  onComponentClick,\n}: React.PropsWithChildren<IISProps<T & { id: number }>>): React.ReactElement<\n  IISProps<T>\n> {\n  // this is necessary because of `viewGridSize`\n  const gridSize = transformToCompleteGridSizeOptions(_gridSize);\n\n  const breakpoint = useBreakpoint();\n\n  const [hasMore, setHasMore] = useState<boolean>(true);\n\n  const observer = useRef(\n    new IntersectionObserver((entries) => callback(entries, setHasMore), {\n      threshold: 0.5,\n    })\n  );\n  const listElementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    setHasMore(true);\n  }, [data]);\n\n  useEffect(() => {\n    const currentObserver = observer.current;\n    const currentElement = listElementRef.current;\n    if (currentElement) currentObserver.observe(currentElement);\n\n    return () => {\n      if (currentElement) {\n        currentObserver.unobserve(currentElement);\n      }\n    };\n  });\n\n  const viewGridSize = gridSize[breakpoint];\n  const itemsPerRow = 12 / viewGridSize;\n  const numPlaceholders = data.length ? itemsPerRow : itemsPerRow * 2;\n\n  return (\n    <Fragment>\n      <Grid container direction=\"row\" spacing={1}>\n        {data.length\n          ? data.map((data, i) => (\n              <Grid\n                key={data.id}\n                item\n                xs={gridSize.xs}\n                sm={gridSize.sm}\n                md={gridSize.md}\n                lg={gridSize.lg}\n                xl={gridSize.xl}\n                onClick={() => {\n                  if (onComponentClick) onComponentClick(data);\n                }}\n              >\n                <ViewComponent data={data} index={i} {...viewProps} />\n              </Grid>\n            ))\n          : null}\n      </Grid>\n      <Grid\n        container\n        direction=\"row\"\n        ref={listElementRef}\n        style={{ display: hasMore ? \"flex\" : \"none\", paddingTop: \"4px\" }}\n        spacing={1}\n      >\n        {Array.from({\n          length: numPlaceholders,\n        }).map((_, i) => (\n          <Grid\n            key={`empty-${i}`}\n            item\n            xs={gridSize.xs}\n            sm={gridSize.sm}\n            md={gridSize.md}\n            lg={gridSize.lg}\n            xl={gridSize.xl}\n          >\n            <ViewComponent />\n          </Grid>\n        ))}\n      </Grid>\n    </Fragment>\n  );\n}\n\nexport default InfiniteScroll;\n","import { ITeamBuild } from \"../types\";\n\nexport function characterSelectReducer(\n  state: number[],\n  action: { type: \"add\" | \"remove\" | \"reset\"; payload: number }\n) {\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.payload];\n    case \"remove\":\n      return [\n        ...state.slice(0, state.indexOf(action.payload)),\n        ...state.slice(state.indexOf(action.payload) + 1),\n      ];\n    case \"reset\":\n      return [];\n    default:\n      throw new Error();\n  }\n}\n\nexport function attrSelectReducer(\n  state: string[],\n  action: { type: \"add\" | \"remove\" | \"reset\"; payload: string }\n) {\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.payload];\n    case \"remove\":\n      return [\n        ...state.slice(0, state.indexOf(action.payload)),\n        ...state.slice(state.indexOf(action.payload) + 1),\n      ];\n    case \"reset\":\n      return [];\n    default:\n      throw new Error();\n  }\n}\n\nexport function missionTypeReducer(\n  state: string[],\n  action: { type: \"add\" | \"remove\" | \"reset\"; payload: string }\n) {\n  switch (action.type) {\n    case \"add\":\n      return [...state, action.payload];\n    case \"remove\":\n      return [\n        ...state.slice(0, state.indexOf(action.payload)),\n        ...state.slice(state.indexOf(action.payload) + 1),\n      ];\n    case \"reset\":\n      return [];\n    default:\n      throw new Error();\n  }\n}\n\nexport function teamBuildReducer(\n  state: ITeamBuild[],\n  action:\n    | { type: \"add\"; payload: ITeamBuild }\n    | { type: \"remove\"; payload: number }\n    | { type: \"replace\"; payload: { id: number; data: ITeamBuild } }\n) {\n  switch (action.type) {\n    case \"add\": {\n      const teams = [...state, action.payload];\n      localStorage.setItem(\"team-build-array\", JSON.stringify(teams));\n      return teams;\n    }\n    case \"remove\": {\n      const teams = [\n        ...state.slice(0, action.payload),\n        ...state.slice(action.payload + 1),\n      ];\n      localStorage.setItem(\"team-build-array\", JSON.stringify(teams));\n      return teams;\n    }\n    case \"replace\": {\n      const teams = [\n        ...state.slice(0, action.payload.id),\n        action.payload.data,\n        ...state.slice(action.payload.id + 1),\n      ];\n      localStorage.setItem(\"team-build-array\", JSON.stringify(teams));\n      return teams;\n    }\n    default:\n      throw new Error();\n  }\n}\n","import { Skeleton } from \"@material-ui/lab\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSvgStyles } from \"../../styles/svg\";\nimport { IResourceBoxInfo, IHonorInfo } from \"../../types\";\nimport { getRemoteAssetURL, useCachedData } from \"../../utils\";\nimport { degreeFrameMap } from \"../../utils/resources\";\n\nconst DegreeImage: React.FC<\n  {\n    resourceBoxId?: number;\n    honorId?: number;\n    type?: string;\n    honorLevel?: number;\n  } & React.HTMLProps<HTMLDivElement>\n> = ({ resourceBoxId, type, honorId, style }) => {\n  const classes = useSvgStyles();\n\n  const [resourceBoxes] = useCachedData<IResourceBoxInfo>(\"resourceBoxes\");\n  const [honors] = useCachedData<IHonorInfo>(\"honors\");\n\n  const [honor, setHonor] = useState<IHonorInfo>();\n  const [degreeImage, setDegreeImage] = useState<string>(\"\");\n  const [degreeRankImage, setDegreeRankImage] = useState<string>(\"\");\n\n  useEffect(() => {\n    if (resourceBoxes.length && honors.length) {\n      setHonor(\n        honors.find((honor) =>\n          resourceBoxId\n            ? honor.id ===\n              resourceBoxes\n                .find(\n                  (resBox) =>\n                    resBox.resourceBoxPurpose === type! &&\n                    resBox.id === resourceBoxId\n                )!\n                .details.find((detail) => detail.resourceType === \"honor\")!\n                .resourceId\n            : honorId\n            ? honor.id === honorId\n            : undefined\n        )!\n      );\n    }\n  }, [honors, resourceBoxes, resourceBoxId, type, honorId]);\n\n  useEffect(() => {\n    if (honor) {\n      getRemoteAssetURL(\n        `honor/${honor.assetbundleName}_rip/degree_main.webp`,\n        setDegreeImage\n      );\n      if (type === \"event_ranking_reward\")\n        getRemoteAssetURL(\n          `honor/${honor.assetbundleName}_rip/rank_main.webp`,\n          setDegreeRankImage\n        );\n      else if (honor.name.startsWith(\"TOP\"))\n        getRemoteAssetURL(\n          `honor/${honor.assetbundleName}_rip/rank_main.webp`,\n          setDegreeRankImage\n        );\n    }\n  }, [honor, type]);\n\n  return honor ? (\n    <div className={classes.svg}>\n      <svg\n        style={style}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 380 80\"\n      >\n        <image href={degreeImage} x=\"0\" y=\"0\" height=\"80\" width=\"380\" />\n        {/* frame */}\n        <image\n          href={degreeFrameMap[honor.honorRarity]}\n          x=\"0\"\n          y=\"0\"\n          height=\"80\"\n          width=\"380\"\n        />\n        {/* rank */}\n        {degreeRankImage && (\n          <image href={degreeRankImage} x=\"190\" y=\"0\" width=\"150\" height=\"78\" />\n        )}\n      </svg>\n    </div>\n  ) : (\n    <Skeleton variant=\"rect\" className={classes.skeleton}></Skeleton>\n  );\n};\n\nexport default DegreeImage;\n","import {\n  Card,\n  CardContent,\n  CardMedia,\n  Grid,\n  makeStyles,\n  Typography,\n} from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport React, { Fragment, useContext } from \"react\";\n// import { useTranslation } from \"react-i18next\";\n// import { Link, useRouteMatch } from \"react-router-dom\";\nimport { SettingContext } from \"../../../context\";\nimport { IHonorMission } from \"../../../types\";\nimport { useAssetI18n } from \"../../../utils/i18n\";\nimport { ContentTrans } from \"../../subs/ContentTrans\";\nimport DegreeImage from \"../../subs/DegreeImage\";\n\nconst useStyles = makeStyles((theme) => ({\n  media: {\n    paddingTop: \"5%\",\n    backgroundSize: \"contain\",\n  },\n  card: {\n    cursor: \"pointer\",\n  },\n  header: {},\n  \"grid-out\": {\n    padding: theme.spacing(\"1%\", \"2%\"),\n  },\n}));\n\nconst GridView: React.FC<{ data?: IHonorMission }> = ({ data }) => {\n  const classes = useStyles();\n  // const { t } = useTranslation();\n  const { getTranslated } = useAssetI18n();\n  // const { path } = useRouteMatch();\n  const { contentTransMode } = useContext(SettingContext)!;\n\n  if (!data) {\n    // loading\n    return (\n      <Card className={classes.card}>\n        <Skeleton variant=\"rect\" className={classes.media}></Skeleton>\n        <CardContent>\n          <Typography variant=\"subtitle1\" className={classes.header}>\n            <Skeleton variant=\"text\" width=\"90%\"></Skeleton>\n          </Typography>\n          <Typography variant=\"body2\">\n            <Skeleton variant=\"text\" width=\"40%\"></Skeleton>\n          </Typography>\n        </CardContent>\n      </Card>\n    );\n  }\n  return (\n    <Fragment>\n      <Card className={classes.card}>\n        <CardMedia\n          className={classes.media}\n          title={getTranslated(\n            contentTransMode,\n            `honor_mission:${data.id}`,\n            data.sentence\n          )}\n        >\n          <DegreeImage\n            resourceBoxId={data.rewards[0].resourceBoxId}\n            type=\"mission_reward\"\n          />\n        </CardMedia>\n        <CardContent style={{ paddingBottom: \"16px\" }}>\n          <Grid container direction=\"column\" spacing={1}>\n            <Grid item>\n              <ContentTrans\n                mode={contentTransMode}\n                contentKey={`honor_mission:${data.id}`}\n                original={data.sentence}\n                originalProps={{\n                  variant: \"subtitle1\",\n                  className: classes.header,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default GridView;\n","import {\n  Button,\n  ButtonGroup,\n  Chip,\n  Collapse,\n  Container,\n  Dialog,\n  DialogContent,\n  Divider,\n  Grid,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport { Sort, SortOutlined } from \"@material-ui/icons\";\nimport { Filter, FilterOutline } from \"mdi-material-ui\";\nimport React, { useState, useEffect, Fragment, useReducer } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { missionTypeReducer } from \"../../../stores/reducers\";\nimport { useInteractiveStyles } from \"../../../styles/interactive\";\nimport { useLayoutStyles } from \"../../../styles/layout\";\nimport {\n  IHonorGroup,\n  IHonorInfo,\n  IHonorMission,\n  IResourceBoxInfo,\n} from \"../../../types\";\nimport { useCachedData, useRefState } from \"../../../utils\";\nimport DegreeImage from \"../../subs/DegreeImage\";\nimport InfiniteScroll from \"../../subs/InfiniteScroll\";\nimport GridView from \"./GridView\";\n\ntype ViewGridType = \"grid\" | \"agenda\" | \"comfy\";\n\nconst ListCard: { [key: string]: React.FC<{ data?: IHonorMission }> } = {\n  grid: GridView,\n};\n\nfunction getPaginatedHonorMissions(\n  events: IHonorMission[],\n  page: number,\n  limit: number\n) {\n  return events.slice(limit * (page - 1), limit * page);\n}\n\nconst DetailDialog: React.FC<{\n  resourceBoxId: number;\n  open: boolean;\n  onClose: (event: {}, reason: \"backdropClick\" | \"escapeKeyDown\") => void;\n  missionData?: IHonorMission;\n}> = ({ resourceBoxId, open, onClose, missionData }) => {\n  const { t } = useTranslation();\n\n  const [resourceBoxes] = useCachedData<IResourceBoxInfo>(\"resourceBoxes\");\n  const [honors] = useCachedData<IHonorInfo>(\"honors\");\n  const [honorGroups] = useCachedData<IHonorGroup>(\"honorGroups\");\n\n  const [honor, setHonor] = useState<IHonorInfo>();\n  const [honorGroup, setHonorGroup] = useState<IHonorGroup>();\n\n  useEffect(() => {\n    if (\n      resourceBoxes.length &&\n      honors.length &&\n      honorGroups.length &&\n      resourceBoxId\n    ) {\n      const honor = honors.find(\n        (honor) =>\n          honor.id ===\n          resourceBoxes\n            .find(\n              (resBox) =>\n                resBox.resourceBoxPurpose === \"mission_reward\" &&\n                resBox.id === resourceBoxId\n            )!\n            .details.find((detail) => detail.resourceType === \"honor\")!\n            .resourceId\n      )!;\n      const honorGroup = honorGroups.find((hg) => hg.id === honor.groupId)!;\n      setHonor(honor);\n      setHonorGroup(honorGroup);\n    }\n  }, [honors, resourceBoxes, resourceBoxId, honorGroups]);\n\n  return honor && honorGroup && missionData ? (\n    <Dialog open={open} onClose={onClose} fullWidth>\n      <DialogContent>\n        <Grid container spacing={2}>\n          <Grid item container justify=\"center\">\n            <DegreeImage resourceBoxId={resourceBoxId} type=\"mission_reward\" />\n          </Grid>\n        </Grid>\n        <Grid\n          container\n          direction=\"row\"\n          wrap=\"nowrap\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n            {t(\"common:id\")}\n          </Typography>\n          <Typography>{honor.id}</Typography>\n        </Grid>\n        <Divider style={{ margin: \"1% 0\" }} />\n        <Grid\n          container\n          direction=\"row\"\n          wrap=\"nowrap\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n            {t(\"common:title\")}\n          </Typography>\n          <Typography>{honor.name}</Typography>\n        </Grid>\n        <Divider style={{ margin: \"1% 0\" }} />\n        <Grid\n          container\n          direction=\"row\"\n          wrap=\"nowrap\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={3} md={2}>\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"common:description\")}\n            </Typography>\n          </Grid>\n          <Grid item xs={8} md={9}>\n            <Typography align=\"right\">{missionData.sentence}</Typography>\n          </Grid>\n        </Grid>\n        <Divider style={{ margin: \"1% 0\" }} />\n        <Grid\n          container\n          direction=\"row\"\n          wrap=\"nowrap\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n            {t(\"mission:type.caption\")}\n          </Typography>\n          <Typography>\n            {t(`mission:type.${missionData.honorMissionType}`)}\n          </Typography>\n        </Grid>\n        <Divider style={{ margin: \"1% 0\" }} />\n        <Grid\n          container\n          direction=\"row\"\n          wrap=\"nowrap\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item xs={3} md={2}>\n            <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n              {t(\"mission:requirement\")}\n            </Typography>\n          </Grid>\n          <Grid item xs={8} md={9}>\n            <Typography align=\"right\">{missionData.requirement}</Typography>\n          </Grid>\n        </Grid>\n        <Divider style={{ margin: \"1% 0\" }} />\n        <Grid\n          container\n          direction=\"row\"\n          wrap=\"nowrap\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n            {t(\"mission:mission_group\")}\n          </Typography>\n          <Typography>{honorGroup.honorType}</Typography>\n        </Grid>\n        <Divider style={{ margin: \"1% 0\" }} />\n        <Grid\n          container\n          direction=\"row\"\n          wrap=\"nowrap\"\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n            {t(\"common:rarity\")}\n          </Typography>\n          <Typography>{honor.honorRarity}</Typography>\n        </Grid>\n        <Divider style={{ margin: \"1% 0\" }} />\n        {honor.levels.map((level) => (\n          <Fragment>\n            <Grid\n              container\n              direction=\"row\"\n              wrap=\"nowrap\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n                {t(\"common:level\")}\n              </Typography>\n              <Typography>{level.level}</Typography>\n            </Grid>\n            <Divider style={{ margin: \"1% 0\" }} />\n            <Grid\n              container\n              direction=\"row\"\n              wrap=\"nowrap\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={3} md={2}>\n                <Typography variant=\"subtitle1\" style={{ fontWeight: 600 }}>\n                  {t(\"common:description\")}\n                </Typography>\n              </Grid>\n              <Grid item xs={8} md={9}>\n                <Typography align=\"right\">{level.description}</Typography>\n              </Grid>\n            </Grid>\n            <Divider style={{ margin: \"1% 0\" }} />\n          </Fragment>\n        ))}\n      </DialogContent>\n    </Dialog>\n  ) : null;\n};\n\nconst TitleMissionList: React.FC<{}> = () => {\n  const layoutClasses = useLayoutStyles();\n  const interactiveClasses = useInteractiveStyles();\n  const { t } = useTranslation();\n\n  const [honorMissionsCache] = useCachedData<IHonorMission>(\"honorMissions\");\n\n  const [honorMissions, setHonorMissions] = useState<IHonorMission[]>([]);\n  const [open, setOpen] = useState<boolean>(false);\n  const [resourceBoxId, setResourceBoxId] = useState<number>(0);\n  const [honorMission, setHonorMission] = useState<IHonorMission>();\n\n  const [viewGridType] = useState<ViewGridType>(\n    (localStorage.getItem(\"event-list-grid-view-type\") ||\n      \"grid\") as ViewGridType\n  );\n  const [page, pageRef, setPage] = useRefState<number>(1);\n  const [limit, limitRef] = useRefState<number>(12);\n  const [, lastQueryFinRef, setLastQueryFin] = useRefState<boolean>(true);\n  const [, isReadyRef, setIsReady] = useRefState<boolean>(false);\n  const [filterOpened, setFilterOpened] = useState<boolean>(false);\n  const [missionTypeSelected, dispatchMissionTypeSelected] = useReducer(\n    missionTypeReducer,\n    []\n  );\n  const [sortedCache, sortedCacheRef, setSortedCache] = useRefState<\n    IHonorMission[]\n  >([]);\n\n  useEffect(() => {\n    document.title = t(\"title:honorList\");\n  }, [t]);\n\n  useEffect(() => {\n    if (honorMissionsCache.length) {\n      let result = [...honorMissionsCache];\n      // do filter\n      if (missionTypeSelected.length) {\n        result = result.filter((c) =>\n          missionTypeSelected.some((mt) => c.honorMissionType.includes(mt))\n        );\n      }\n      setSortedCache(result);\n      setHonorMissions([]);\n      setPage(0);\n    }\n  }, [honorMissionsCache, setPage, setSortedCache, missionTypeSelected]);\n\n  useEffect(() => {\n    setHonorMissions((events) => [\n      ...events,\n      ...getPaginatedHonorMissions(sortedCache, page, limit),\n    ]);\n    setLastQueryFin(true);\n  }, [page, limit, setLastQueryFin, sortedCache]);\n\n  useEffect(() => {\n    setIsReady(Boolean(honorMissionsCache.length));\n  }, [setIsReady, honorMissionsCache]);\n\n  const callback = (\n    entries: readonly IntersectionObserverEntry[],\n    setHasMore: React.Dispatch<React.SetStateAction<boolean>>\n  ) => {\n    if (!isReadyRef.current) return;\n    if (\n      entries[0].isIntersecting &&\n      lastQueryFinRef.current &&\n      (!sortedCacheRef.current.length ||\n        sortedCacheRef.current.length > pageRef.current * limitRef.current)\n    ) {\n      setPage((page) => page + 1);\n      setLastQueryFin(false);\n    } else if (\n      sortedCacheRef.current.length &&\n      sortedCacheRef.current.length <= pageRef.current * limitRef.current\n    ) {\n      setHasMore(false);\n    }\n  };\n\n  return (\n    <Fragment>\n      <Typography variant=\"h6\" className={layoutClasses.header}>\n        {t(\"common:mission.main\")} - {t(\"common:mission.honor\")}\n      </Typography>\n      <Container className={layoutClasses.content}>\n        <Grid container justify=\"flex-end\">\n          <ButtonGroup color=\"primary\" style={{ marginBottom: \"1%\" }}>\n            <Button size=\"medium\" onClick={() => setFilterOpened((v) => !v)}>\n              {filterOpened ? <Filter /> : <FilterOutline />}\n              {filterOpened ? <Sort /> : <SortOutlined />}\n            </Button>\n          </ButtonGroup>\n        </Grid>\n        <Collapse in={filterOpened}>\n          <Paper className={interactiveClasses.container}>\n            <Grid container direction=\"column\" spacing={1}>\n              <Grid\n                item\n                container\n                xs={12}\n                alignItems=\"center\"\n                justify=\"space-between\"\n              >\n                <Grid item xs={12} md={1}>\n                  <Typography classes={{ root: interactiveClasses.caption }}>\n                    {t(\"filter:missionType.caption\")}\n                  </Typography>\n                </Grid>\n                <Grid item container xs={12} md={10} spacing={1}>\n                  {[\n                    \"clear_live\",\n                    \"player_rank\",\n                    \"character_rank\",\n                    \"unit_rank\",\n                    \"collect\",\n                    \"duplicate_card\",\n                    \"area_item\",\n                    \"login\",\n                    \"master\",\n                    \"multi_live\",\n                    \"action_set\",\n                    \"read_story\",\n                    \"virtual_live\",\n                  ].map((tag) => (\n                    <Grid key={\"mission-type-\" + tag} item>\n                      <Chip\n                        clickable\n                        color={\n                          missionTypeSelected.includes(tag)\n                            ? \"primary\"\n                            : \"default\"\n                        }\n                        label={t(`mission:type.${tag}`)}\n                        onClick={() => {\n                          if (missionTypeSelected.includes(tag)) {\n                            dispatchMissionTypeSelected({\n                              type: \"remove\",\n                              payload: tag,\n                            });\n                          } else {\n                            dispatchMissionTypeSelected({\n                              type: \"add\",\n                              payload: tag,\n                            });\n                          }\n                        }}\n                      />\n                    </Grid>\n                  ))}\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Collapse>\n        <InfiniteScroll<IHonorMission>\n          ViewComponent={ListCard[viewGridType]}\n          callback={callback}\n          data={honorMissions}\n          gridSize={\n            ({\n              grid: {\n                xs: 12,\n                sm: 6,\n                md: 4,\n                lg: 3,\n                xl: 2,\n              },\n              agenda: {\n                xs: 12,\n              },\n              comfy: {\n                xs: 12,\n              },\n            } as const)[viewGridType]\n          }\n          onComponentClick={(data) => {\n            setHonorMission(data);\n            setResourceBoxId(data.rewards[0].resourceBoxId);\n            setOpen(true);\n          }}\n        />\n      </Container>\n      <DetailDialog\n        missionData={honorMission}\n        resourceBoxId={resourceBoxId}\n        open={open}\n        onClose={() => setOpen(false)}\n      />\n    </Fragment>\n  );\n};\n\nexport default TitleMissionList;\n"],"sourceRoot":""}