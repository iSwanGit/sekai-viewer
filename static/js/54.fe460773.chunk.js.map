{"version":3,"sources":["components/user/User.tsx"],"names":["Login","lazy","Signup","ResetPassword","ResetPasswordCallback","UserHome","Confirmation","User","useJwtAuth","user","isExpired","token","path","useRouteMatch","exact","to"],"mappings":"sHAAA,4CAKMA,EAAQC,gBAAK,kBAAM,8EACnBC,EAASD,gBAAK,kBAAM,wEACpBE,EAAgBF,gBAAK,kBAAM,uEAC3BG,EAAwBH,gBAAK,kBAAM,8EACnCI,EAAWJ,gBAAK,kBAAM,8EACtBK,EAAeL,gBAAK,kBAAM,mCA6CjBM,UA3CY,WAAM,MAEIC,cAA3BC,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,UAAWC,EAFM,EAENA,MACnBC,EAASC,cAATD,KAEN,OACE,kBAAC,WAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACF,KAAMA,IAChBF,GAAcC,GAAUF,EAGvBA,GAAQ,kBAACJ,EAAD,MAFR,kBAAC,IAAD,CAAUU,GAAE,UAAKH,EAAL,aAKhB,kBAAC,IAAD,CAAOA,KAAI,UAAKA,EAAL,YACPF,GAAaD,GAAQE,EACrB,kBAAC,IAAD,CAAUI,GAAG,UAEb,kBAACf,EAAD,OAGJ,kBAAC,IAAD,CAAOY,KAAI,UAAKA,EAAL,aACPF,GAAaD,GAAQE,EACrB,kBAAC,IAAD,CAAUI,GAAG,UAEb,kBAACb,EAAD,OAGJ,kBAAC,IAAD,CAAOY,OAAK,EAACF,KAAI,UAAKA,EAAL,YACf,kBAACT,EAAD,OAEF,kBAAC,IAAD,CAAOS,KAAI,UAAKA,EAAL,qBACT,kBAACR,EAAD,OAEF,kBAAC,IAAD,CAAOQ,KAAI,UAAKA,EAAL,kBACT,kBAACN,EAAD","file":"static/js/54.fe460773.chunk.js","sourcesContent":["import React, { Fragment, lazy } from \"react\";\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport useJwtAuth from \"../../utils/jwt\";\n// import { UserProvider } from \"../../context\";\n\nconst Login = lazy(() => import(\"./Login\"));\nconst Signup = lazy(() => import(\"./Signup\"));\nconst ResetPassword = lazy(() => import(\"./ResetPassword\"));\nconst ResetPasswordCallback = lazy(() => import(\"./ResetPasswordCallback\"));\nconst UserHome = lazy(() => import(\"./UserHome\"));\nconst Confirmation = lazy(() => import(\"./EmailConfirm\"));\n\nconst User: React.FC<{}> = () => {\n  // const interactiveClasses = useInteractiveStyles();\n  const { user, isExpired, token } = useJwtAuth();\n  let { path } = useRouteMatch();\n\n  return (\n    <Fragment>\n      <Switch>\n        <Route exact path={path}>\n          {isExpired || !token || !user ? (\n            <Redirect to={`${path}/login`}></Redirect>\n          ) : (\n            user && <UserHome />\n          )}\n        </Route>\n        <Route path={`${path}/login`}>\n          {!isExpired && user && token ? (\n            <Redirect to=\"/user\"></Redirect>\n          ) : (\n            <Login />\n          )}\n        </Route>\n        <Route path={`${path}/signup`}>\n          {!isExpired && user && token ? (\n            <Redirect to=\"/user\"></Redirect>\n          ) : (\n            <Signup />\n          )}\n        </Route>\n        <Route exact path={`${path}/forgot`}>\n          <ResetPassword />\n        </Route>\n        <Route path={`${path}/forgot/callback`}>\n          <ResetPasswordCallback />\n        </Route>\n        <Route path={`${path}/confirmation`}>\n          <Confirmation />\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n};\n\nexport default User;\n"],"sourceRoot":""}